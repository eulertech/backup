DROP TABLE IF EXISTS {schemaName}.{tableName}F1_1;
CREATE TABLE {schemaName}.{tableName}F1_1
(
	RESPONDENT		BIGINT,
	RESPONDEN2		VARCHAR(60) ENCODE LZO,
	RESPONDEN3		VARCHAR(10) ENCODE LZO,
	STATUS			VARCHAR(10) ENCODE LZO,
	FORM_TYPE		BIGINT,
	STATUS_DAT		VARCHAR(20) ENCODE LZO,
	SORT_NAME		VARCHAR(10) ENCODE LZO,
	PSWD_GEN		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		BIGINT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_10;
CREATE TABLE {schemaName}.{tableName}F1_10
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	SUCCEEDING		BIGINT,
	AI_BGNYRBA		VARCHAR(100) ENCODE LZO,
	AI_BGNYRB2		VARCHAR(100) ENCODE LZO,
	AI_ACQ_YR_		VARCHAR(100) ENCODE LZO,
	AI_ACQ_YR2		VARCHAR(100) ENCODE LZO,
	AI_EPA_RET		VARCHAR(100) ENCODE LZO,
	AI_EPA_RE2		VARCHAR(100) ENCODE LZO,
	PX_USERDEF		VARCHAR(100) ENCODE LZO,
	PX_USERDE2		VARCHAR(100) ENCODE LZO,
	PX_USERDE3		VARCHAR(100) ENCODE LZO,
	PX_USERDE4		VARCHAR(100) ENCODE LZO,
	PX_USERDE5		VARCHAR(100) ENCODE LZO,
	PX_USERDE6		VARCHAR(100) ENCODE LZO,
	PX_USERDE7		VARCHAR(100) ENCODE LZO,
	PX_USERDE8		VARCHAR(100) ENCODE LZO,
	PX_USERDE9		VARCHAR(100) ENCODE LZO,
	PX_USERD10		VARCHAR(100) ENCODE LZO,
	PX_USERD11		VARCHAR(100) ENCODE LZO,
	PX_USERD12		VARCHAR(100) ENCODE LZO,
	PX_USERD13		VARCHAR(100) ENCODE LZO,
	PX_USERD14		VARCHAR(100) ENCODE LZO,
	PX_USERD15		VARCHAR(100) ENCODE LZO,
	PX_USERD16		VARCHAR(100) ENCODE LZO,
	PX_USERD17		VARCHAR(100) ENCODE LZO,
	PX_USERD18		VARCHAR(100) ENCODE LZO,
	PX_USERD19		VARCHAR(100) ENCODE LZO,
	PX_USERD20		VARCHAR(100) ENCODE LZO,
	PX_USERD21		VARCHAR(100) ENCODE LZO,
	PX_TOTAL_N		VARCHAR(100) ENCODE LZO,
	PX_TOTAL_A		VARCHAR(100) ENCODE LZO,
	RDY_CHARGE		VARCHAR(100) ENCODE LZO,
	RDY_CHARG2		VARCHAR(100) ENCODE LZO,
	RDY_OTHER_		VARCHAR(100) ENCODE LZO,
	RDY_OTHER2		VARCHAR(100) ENCODE LZO,
	RDY_USERDE		VARCHAR(100) ENCODE LZO,
	RDY_USERD2		VARCHAR(100) ENCODE LZO,
	RDY_USERD3		VARCHAR(100) ENCODE LZO,
	SX_USERDEF		VARCHAR(100) ENCODE LZO,
	SX_USERDE2		VARCHAR(100) ENCODE LZO,
	SX_USERDE3		VARCHAR(100) ENCODE LZO,
	SX_USERDE4		VARCHAR(100) ENCODE LZO,
	SX_USERDE5		VARCHAR(100) ENCODE LZO,
	SX_USERDE6		VARCHAR(100) ENCODE LZO,
	SX_USERDE7		VARCHAR(100) ENCODE LZO,
	SX_USERDE8		VARCHAR(100) ENCODE LZO,
	SX_USERDE9		VARCHAR(100) ENCODE LZO,
	SX_USERD10		VARCHAR(100) ENCODE LZO,
	SX_USERD11		VARCHAR(100) ENCODE LZO,
	SX_USERD12		VARCHAR(100) ENCODE LZO,
	SX_USERD13		VARCHAR(100) ENCODE LZO,
	SX_USERD14		VARCHAR(100) ENCODE LZO,
	SX_USERD15		VARCHAR(100) ENCODE LZO,
	SX_USERD16		VARCHAR(100) ENCODE LZO,
	SX_USERD17		VARCHAR(100) ENCODE LZO,
	SX_USERD18		VARCHAR(100) ENCODE LZO,
	SX_TOTAL_N		VARCHAR(100) ENCODE LZO,
	SX_TOTAL_A		VARCHAR(100) ENCODE LZO,
	SX_YRENDBA		VARCHAR(100) ENCODE LZO,
	SX_YRENDB2		VARCHAR(100) ENCODE LZO,
	SX_NET_ASS		VARCHAR(100) ENCODE LZO,
	SX_NET_AS2		VARCHAR(100) ENCODE LZO,
	SX_NET_OTH		VARCHAR(100) ENCODE LZO,
	SX_NET_OT2		VARCHAR(100) ENCODE LZO,
	SX_GAINS_N		VARCHAR(100) ENCODE LZO,
	SX_GAINS_A		VARCHAR(100) ENCODE LZO,
	SX_LOSSES_		VARCHAR(100) ENCODE LZO,
	SX_LOSSES2		VARCHAR(100) ENCODE LZO,
	AW_BGNYRBA		VARCHAR(100) ENCODE LZO,
	AW_BGNYRB2		VARCHAR(100) ENCODE LZO,
	AW_WITHHEL		VARCHAR(100) ENCODE LZO,
	AW_WITHHE2		VARCHAR(100) ENCODE LZO,
	AW_RETURNE		VARCHAR(100) ENCODE LZO,
	AW_RETURN2		VARCHAR(100) ENCODE LZO,
	AW_SALES_N		VARCHAR(100) ENCODE LZO,
	AW_SALES_A		VARCHAR(100) ENCODE LZO,
	AW_YRENDBA		VARCHAR(100) ENCODE LZO,
	AW_YRENDB2		VARCHAR(100) ENCODE LZO,
	AW_NET_ASS		VARCHAR(100) ENCODE LZO,
	AW_NET_AS2		VARCHAR(100) ENCODE LZO,
	AW_NET_OTH		VARCHAR(100) ENCODE LZO,
	AW_NET_OT2		VARCHAR(100) ENCODE LZO,
	AW_GAINS_N		VARCHAR(100) ENCODE LZO,
	AW_GAINS_A		VARCHAR(100) ENCODE LZO,
	AW_LOSSES_		VARCHAR(100) ENCODE LZO,
	AW_LOSSES2		VARCHAR(100) ENCODE LZO,
	SUCCEEDIN2		BIGINT,
	AI_BGNYRB3		BIGINT,
	AI_BGNYRB4		BIGINT,
	AI_ACQ_YR3		BIGINT,
	AI_ACQ_YR4		BIGINT,
	AI_EPA_RE3		BIGINT,
	AI_EPA_RE4		BIGINT,
	PX_USERD22		BIGINT,
	PX_USERD23		BIGINT,
	PX_USERD24		BIGINT,
	PX_USERD25		BIGINT,
	PX_USERD26		BIGINT,
	PX_USERD27		BIGINT,
	PX_USERD28		BIGINT,
	PX_USERD29		BIGINT,
	PX_USERD30		BIGINT,
	PX_USERD31		BIGINT,
	PX_USERD32		BIGINT,
	PX_USERD33		BIGINT,
	PX_USERD34		BIGINT,
	PX_USERD35		BIGINT,
	PX_USERD36		BIGINT,
	PX_USERD37		BIGINT,
	PX_USERD38		BIGINT,
	PX_USERD39		BIGINT,
	PX_USERD40		BIGINT,
	PX_USERD41		BIGINT,
	PX_USERD42		BIGINT,
	PX_TOTAL_2		BIGINT,
	PX_TOTAL_3		BIGINT,
	RDY_CHARG3		BIGINT,
	RDY_CHARG4		BIGINT,
	RDY_OTHER3		BIGINT,
	RDY_OTHER4		BIGINT,
	RDY_USERD4		BIGINT,
	RDY_USERD5		BIGINT,
	RDY_USERD6		BIGINT,
	SX_USERD19		BIGINT,
	SX_USERD20		BIGINT,
	SX_USERD21		BIGINT,
	SX_USERD22		BIGINT,
	SX_USERD23		BIGINT,
	SX_USERD24		BIGINT,
	SX_USERD25		BIGINT,
	SX_USERD26		BIGINT,
	SX_USERD27		BIGINT,
	SX_USERD28		BIGINT,
	SX_USERD29		BIGINT,
	SX_USERD30		BIGINT,
	SX_USERD31		BIGINT,
	SX_USERD32		BIGINT,
	SX_USERD33		BIGINT,
	SX_USERD34		BIGINT,
	SX_USERD35		BIGINT,
	SX_USERD36		BIGINT,
	SX_TOTAL_2		BIGINT,
	SX_TOTAL_3		BIGINT,
	SX_YRENDB3		BIGINT,
	SX_YRENDB4		BIGINT,
	SX_NET_AS3		BIGINT,
	SX_NET_AS4		BIGINT,
	SX_NET_OT3		BIGINT,
	SX_NET_OT4		BIGINT,
	SX_GAINS_2		BIGINT,
	SX_GAINS_3		BIGINT,
	SX_LOSSES3		BIGINT,
	SX_LOSSES4		BIGINT,
	AW_BGNYRB3		BIGINT,
	AW_BGNYRB4		BIGINT,
	AW_WITHHE3		BIGINT,
	AW_WITHHE4		BIGINT,
	AW_RETURN3		BIGINT,
	AW_RETURN4		BIGINT,
	AW_SALES_2		BIGINT,
	AW_SALES_3		BIGINT,
	AW_YRENDB3		BIGINT,
	AW_YRENDB4		BIGINT,
	AW_NET_AS3		BIGINT,
	AW_NET_AS4		BIGINT,
	AW_NET_OT3		BIGINT,
	AW_NET_OT4		BIGINT,
	AW_GAINS_2		BIGINT,
	AW_GAINS_3		BIGINT,
	AW_LOSSES3		BIGINT,
	AW_LOSSES4		BIGINT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_106A_2009;
CREATE TABLE {schemaName}.{tableName}F1_106A_2009
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	REPORT_PRD		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	ACCESSION_		VARCHAR(100) ENCODE LZO,
	DOCUMENTDA		VARCHAR(100) ENCODE LZO,
	DOCKETNO		VARCHAR(100) ENCODE LZO,
	DESCRIPTIO		VARCHAR(100) ENCODE LZO,
	RATESCHED		VARCHAR(100) ENCODE LZO,
	RESP_FILE		BIGINT,
	ACCESSION2		BIGINT,
	DOCUMENTD2		BIGINT,
	DOCKETNO_F		BIGINT,
	DESCRIPTI2		BIGINT,
	RATESCHED_		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_106B_2009;
CREATE TABLE {schemaName}.{tableName}F1_106B_2009
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	REPORT_PRD		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	PAGENOS			VARCHAR(20) ENCODE LZO,
	SCHEDULE		VARCHAR(60) ENCODE LZO,
	COLUMN1			VARCHAR(100) ENCODE LZO,
	LINENO			VARCHAR(30) ENCODE LZO,
	PAGENOS_F		BIGINT,
	SCHEDULE_F		BIGINT,
	COLUMN_F		BIGINT,
	LINENO_F		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_106_2009;
CREATE TABLE {schemaName}.{tableName}F1_106_2009
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	REPORT_PRD		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	SCHED_TARI		VARCHAR(60) ENCODE LZO,
	FERC_PROCE		VARCHAR(60) ENCODE LZO,
	FORMULA_RA		BIGINT,
	SCHED_TAR2		BIGINT,
	FERC_PROC2		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_11;
CREATE TABLE {schemaName}.{tableName}F1_11
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(50) ENCODE LZO,
	BEGIN_YR_B		VARCHAR(50) ENCODE LZO,
	END_YR_BAL		VARCHAR(50) ENCODE LZO,
	BEGIN_YR_2		BIGINT,
	END_YR_BA2		BIGINT,
	REPORT_PRD		BIGINT,
	END_QTR_BA		FLOAT,
	PRI_YR_Q4_		FLOAT,
	END_QTR_B2		FLOAT,
	PRI_YR_Q42		FLOAT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_12;
CREATE TABLE {schemaName}.{tableName}F1_12
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	CLSSERS_ST		VARCHAR(50) ENCODE LZO,
	NUM_SHR_AT		FLOAT,
	PAR_STATED		VARCHAR(100) ENCODE LZO,
	CALL_PRC_E		VARCHAR(100) ENCODE LZO,
	SHR_OSTD_B		FLOAT,
	AMT_OSTD_B		FLOAT,
	SHR_REACQ_		FLOAT,
	COST_REACQ		FLOAT,
	SHR_SINKIN		FLOAT,
	AMT_SINKIN		FLOAT,
	CLSSERS_S2		BIGINT,
	NUM_SHR_A2		BIGINT,
	PAR_STATE2		BIGINT,
	CALL_PRC_2		BIGINT,
	SHR_OSTD_2		FLOAT,
	AMT_OSTD_2		FLOAT,
	SHR_REACQ2		FLOAT,
	COST_REAC2		FLOAT,
	SHR_SINKI2		FLOAT,
	AMT_SINKI2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_13;
CREATE TABLE {schemaName}.{tableName}F1_13
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DESCRIPTIO		VARCHAR(500) ENCODE LZO,
	AMOUNTS			FLOAT,
	DESCRIPTI2		BIGINT,
	AMOUNTS_F		BIGINT,
	PREV_AMOUN		FLOAT,
	PREV_AMOU2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_14;
CREATE TABLE {schemaName}.{tableName}F1_14
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	NOTES			VARCHAR(21120) ENCODE LZO,
	NOTES_F			BIGINT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_15;
CREATE TABLE {schemaName}.{tableName}F1_15
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(100) ENCODE LZO,
	BEGIN_YR_B		VARCHAR(100) ENCODE LZO,
	END_YR_BAL		VARCHAR(100) ENCODE LZO,
	BEGIN_YR_2		FLOAT,
	END_YR_BA2		FLOAT,
	REPORT_PRD		BIGINT,
	END_QTR_BA		FLOAT,
	PRI_YR_Q4_		FLOAT,
	END_QTR_B2		FLOAT,
	PRI_YR_Q42		FLOAT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_16;
CREATE TABLE {schemaName}.{tableName}F1_16
(
	RESPONDENT		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		VARCHAR(10) ENCODE LZO,
	SPPLMNT_NU		VARCHAR(10) ENCODE LZO,
	ROW_NUMBER1		VARCHAR(10) ENCODE LZO,
	ROW_SEQ			VARCHAR(10) ENCODE LZO,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DESCRIPTIO		VARCHAR(100) ENCODE LZO,
	TOT_AMOUNT		FLOAT,
	DESCRIPTI2		VARCHAR(10) ENCODE LZO,
	TOT_AMOUN2		FLOAT,
	REPORT_PRD		VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_17;
CREATE TABLE {schemaName}.{tableName}F1_17
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	CO_CNTRL_I		VARCHAR(5000) ENCODE LZO,
	CO_CNTRL_2		BIGINT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_18;
CREATE TABLE {schemaName}.{tableName}F1_18
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DIRECTOR_N		VARCHAR(70) ENCODE LZO,
	PRNCPL_CO_		VARCHAR(70) ENCODE LZO,
	DIRECTOR_2		BIGINT,
	PRNCPL_CO2		BIGINT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_19;
CREATE TABLE {schemaName}.{tableName}F1_19
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	STK_CLS_EX		VARCHAR(100) ENCODE LZO,
	YR_END_BAL		FLOAT,
	STK_CLS_E2		BIGINT,
	YR_END_BA2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_2;
CREATE TABLE {schemaName}.{tableName}F1_2
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	AMRTZD_CHR		VARCHAR(1340) ENCODE LZO,
	AMRTZD_CH2		BIGINT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_20;
CREATE TABLE {schemaName}.{tableName}F1_20
(
	RESPONDENT		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		VARCHAR(10) ENCODE LZO,
	SPPLMNT_NU		VARCHAR(10) ENCODE LZO,
	ROW_NUMBER1		VARCHAR(10) ENCODE LZO,
	ROW_SEQ			VARCHAR(10) ENCODE LZO,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	ACCT_NAM_I		VARCHAR(100) ENCODE LZO,
	NUM_SHR			FLOAT,
	AMOUNT			FLOAT,
	ACCT_NAM_2		VARCHAR(10) ENCODE LZO,
	NUM_SHR_F		VARCHAR(10) ENCODE LZO,
	AMOUNT_F		FLOAT,
	REPORT_PRD		VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_208_ELC_DEP;
CREATE TABLE {schemaName}.{tableName}F1_208_ELC_DEP
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	REPORT_PRD		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	PLNT_END_Q		FLOAT,
	ACCUM_END_		FLOAT,
	PLNT_END_2		FLOAT,
	ACCUM_END2		FLOAT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_21;
CREATE TABLE {schemaName}.{tableName}F1_21
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DEPR_EXPN		FLOAT,
	DEPR_ASSET		FLOAT,
	LIMTERM_EL		FLOAT,
	OTHR_ELC_P		FLOAT,
	TOTAL			FLOAT,
	DEPR_EXPN_		FLOAT,
	DEPR_ASSE2		FLOAT,
	LIMTERM_E2		FLOAT,
	OTHR_ELC_2		BIGINT,
	TOTAL_F			FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_22;
CREATE TABLE {schemaName}.{tableName}F1_22
(
	RESPONDENT		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		VARCHAR(10) ENCODE LZO,
	SPPLMNT_NU		VARCHAR(10) ENCODE LZO,
	ROW_NUMBER1		VARCHAR(10) ENCODE LZO,
	ROW_SEQ			VARCHAR(10) ENCODE LZO,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	STK_CLS_SE		VARCHAR(100) ENCODE LZO,
	YR_END_BAL		VARCHAR(10) ENCODE LZO,
	STK_CLS_S2		VARCHAR(10) ENCODE LZO,
	YR_END_BA2		VARCHAR(10) ENCODE LZO,
	REPORT_PRD		VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_23;
CREATE TABLE {schemaName}.{tableName}F1_23
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	ACCT_NUM		VARCHAR(30) ENCODE LZO,
	DEPR_PLNT_		FLOAT,
	EST_AVG_SR		FLOAT,
	NET_SALVAG		FLOAT,
	APPLY_DEPR		FLOAT,
	MRTLTY_CRV		VARCHAR(20) ENCODE LZO,
	AVG_REMAIN		FLOAT,
	ACCT_NUM_F		FLOAT,
	DEPR_PLNT2		FLOAT,
	EST_AVG_S2		FLOAT,
	NET_SALVA2		FLOAT,
	APPLY_DEP2		FLOAT,
	MRTLTY_CR2		FLOAT,
	AVG_REMAI2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_231_TRN_STDYCST;
CREATE TABLE {schemaName}.{tableName}F1_231_TRN_STDYCST
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	DESCRIPTIO		VARCHAR(40) ENCODE LZO,
	PRD_COSTS		BIGINT,
	ACCT_CHRGD		VARCHAR(30) ENCODE LZO,
	REIMB_RCVD		BIGINT,
	ACCT_CREDI		VARCHAR(30) ENCODE LZO,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DESCRIPTI2		BIGINT,
	PRD_COSTS_		BIGINT,
	ACCT_CHRG2		BIGINT,
	REIMB_RCV2		BIGINT,
	ACCT_CRED2		BIGINT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_24;
CREATE TABLE {schemaName}.{tableName}F1_24
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	ERG_SRC_MW		VARCHAR(100) ENCODE LZO,
	ERG_DISP_M		VARCHAR(20) ENCODE LZO,
	ERG_SRC_M2		BIGINT,
	ERG_DISP_2		BIGINT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_25;
CREATE TABLE {schemaName}.{tableName}F1_25
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	ACCT_DSC		VARCHAR(60) ENCODE LZO,
	REV_AMT_CR		FLOAT,
	REV_AMT_PR		FLOAT,
	MWH_SOLD_C		FLOAT,
	MWH_SOLD_P		FLOAT,
	AVG_CSTMR_		FLOAT,
	AVG_CSTMR2		FLOAT,
	ACCT_DSC_F		FLOAT,
	REV_AMT_C2		FLOAT,
	REV_AMT_P2		FLOAT,
	MWH_SOLD_2		FLOAT,
	MWH_SOLD_3		FLOAT,
	AVG_CSTMR3		FLOAT,
	AVG_CSTMR4		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_26;
CREATE TABLE {schemaName}.{tableName}F1_26
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	UNBILLED_R		FLOAT,
	UNBILLED_2		FLOAT,
	UNBILLED_3		FLOAT,
	UNBILLED_4		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_27;
CREATE TABLE {schemaName}.{tableName}F1_27
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	CRNT_YR_AM		FLOAT,
	PREV_YR_AM		FLOAT,
	CRNT_YR_A2		FLOAT,
	PREV_YR_A2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_28;
CREATE TABLE {schemaName}.{tableName}F1_28
(
	RESPONDENT		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		VARCHAR(10) ENCODE LZO,
	SPPLMNT_NU		VARCHAR(10) ENCODE LZO,
	ROW_NUMBER1		VARCHAR(10) ENCODE LZO,
	ROW_SEQ			VARCHAR(10) ENCODE LZO,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	NUMBER_WAT		VARCHAR(10) ENCODE LZO,
	NUMBER_LIN		VARCHAR(10) ENCODE LZO,
	TOT_CAPACI		VARCHAR(10) ENCODE LZO,
	NUMBER_WA2		VARCHAR(10) ENCODE LZO,
	NUMBER_LI2		VARCHAR(10) ENCODE LZO,
	TOT_CAPAC2		VARCHAR(10) ENCODE LZO,
	REPORT_PRD		VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_29;
CREATE TABLE {schemaName}.{tableName}F1_29
(
	RESPONDENT		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		VARCHAR(10) ENCODE LZO,
	SPPLMNT_NU		VARCHAR(10) ENCODE LZO,
	ROW_NUMBER1		VARCHAR(10) ENCODE LZO,
	ROW_SEQ			VARCHAR(10) ENCODE LZO,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	AMOUNT			FLOAT,
	ACTUAL_EXP		FLOAT,
	AMOUNT_F		FLOAT,
	ACTUAL_EX2		FLOAT,
	REPORT_PRD		VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_3;
CREATE TABLE {schemaName}.{tableName}F1_3
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	ITEM			VARCHAR(40) ENCODE LZO,
	TOTAL_CDE		FLOAT,
	ELECTRIC_P		FLOAT,
	FUTURE_PLA		FLOAT,
	LEASED_PLA		FLOAT,
	ITEM_F			FLOAT,
	TOTAL_CDE_		FLOAT,
	ELECTRIC_2		FLOAT,
	FUTURE_PL2		FLOAT,
	LEASED_PL2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_30;
CREATE TABLE {schemaName}.{tableName}F1_30
(
	RESPONDENT		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		VARCHAR(10) ENCODE LZO,
	SPPLMNT_NU		VARCHAR(10) ENCODE LZO,
	ROW_NUMBER1		VARCHAR(10) ENCODE LZO,
	ROW_SEQ			VARCHAR(10) ENCODE LZO,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	ADDITIONS		FLOAT,
	RETIREMENT		FLOAT,
	ADJUSTMENT		FLOAT,
	YR_END_BAL		FLOAT,
	ACTUAL_COS		FLOAT,
	ADDITIONS_		FLOAT,
	RETIREMEN2		FLOAT,
	ADJUSTMEN2		FLOAT,
	YR_END_BA2		FLOAT,
	ACTUAL_CO2		FLOAT,
	REPORT_PRD		VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_31;
CREATE TABLE {schemaName}.{tableName}F1_31
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	PLANT_NAME		VARCHAR(30) ENCODE LZO,
	FUEL			VARCHAR(20) ENCODE LZO,
	FUEL_UNIT		VARCHAR(20) ENCODE LZO,
	FUEL_QUANT		VARCHAR(50) ENCODE LZO,
	FUEL_AVG_H		VARCHAR(50) ENCODE LZO,
	FUEL_COST_		VARCHAR(50) ENCODE LZO,
	FUEL_COST2		VARCHAR(50) ENCODE LZO,
	FUEL_COST3		VARCHAR(50) ENCODE LZO,
	FUEL_COST4		VARCHAR(50) ENCODE LZO,
	FUEL_GENER		VARCHAR(50) ENCODE LZO,
	FUEL_F			VARCHAR(50) ENCODE LZO,
	FUEL_UNIT_		VARCHAR(50) ENCODE LZO,
	FUEL_QUAN2		VARCHAR(50) ENCODE LZO,
	FUEL_AVG_2		VARCHAR(50) ENCODE LZO,
	FUEL_COST5		VARCHAR(50) ENCODE LZO,
	FUEL_COST6		VARCHAR(50) ENCODE LZO,
	FUEL_COST7		VARCHAR(50) ENCODE LZO,
	FUEL_COST8		VARCHAR(50) ENCODE LZO,
	FUEL_GENE2		VARCHAR(50) ENCODE LZO,
	REPORT_PRD		INT
);
DROP TABLE IF EXISTS {schemaName}.{tableName}F1_32;
CREATE TABLE {schemaName}.{tableName}F1_32
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	CORPORATE_		VARCHAR(310) ENCODE LZO,
	INC_INFO		VARCHAR(300) ENCODE LZO,
	RECV_TRUST		VARCHAR(80) ENCODE LZO,
	UTILITY_CL		VARCHAR(1200) ENCODE LZO,
	PRNCPL_ACC		VARCHAR(10) ENCODE LZO,
	PRNCPL_AC2		VARCHAR(20) ENCODE LZO,
	CORPORATE2		BIGINT,
	INC_INFO_F		BIGINT,
	RECV_TRUS2		BIGINT,
	UTILITY_C2		BIGINT,
	PRNCPL_AC3		BIGINT,
	PRNCPL_AC4		BIGINT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_324_ELC_EXPNS;
CREATE TABLE {schemaName}.{tableName}F1_324_ELC_EXPNS
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	REPORT_PRD		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	YR_TO_DATE		FLOAT,
	YR_TO_DAT2		FLOAT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_325_ELC_CUST;
CREATE TABLE {schemaName}.{tableName}F1_325_ELC_CUST
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	REPORT_PRD		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	YR_TO_DATE		FLOAT,
	YR_TO_DAT2		FLOAT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_33;
CREATE TABLE {schemaName}.{tableName}F1_33
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	PLANT_NAME		VARCHAR(50) ENCODE LZO,
	YR_CONSTRU		VARCHAR(100) ENCODE LZO,
	CAPACITY_R		VARCHAR(100) ENCODE LZO,
	NET_DEMAND		VARCHAR(100) ENCODE LZO,
	NET_GENERA		FLOAT,
	PLANT_COST		FLOAT,
	PLANT_COS2		FLOAT,
	OPERATION		FLOAT,
	EXPNS_FUEL		FLOAT,
	EXPNS_MAIN		FLOAT,
	KIND_OF_FU		VARCHAR(20) ENCODE LZO,
	FUEL_COST		FLOAT,
	PLANT_NAM2		BIGINT,
	YR_CONSTR2		FLOAT,
	CAPACITY_2		FLOAT,
	NET_DEMAN2		FLOAT,
	NET_GENER2		FLOAT,
	PLANT_COS3		FLOAT,
	PLANT_COS4		FLOAT,
	OPERATION_		FLOAT,
	EXPNS_FUE2		FLOAT,
	EXPNS_MAI2		FLOAT,
	KIND_OF_F2		BIGINT,
	FUEL_COST_		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_331_TRANSISO;
CREATE TABLE {schemaName}.{tableName}F1_331_TRANSISO
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	REPORT_PRD		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	PYMT_RECV		VARCHAR(50) ENCODE LZO,
	STAT_CLASS		VARCHAR(10) ENCODE LZO,
	FERC_SCHED		VARCHAR(30) ENCODE LZO,
	TOT_REV_BY		VARCHAR(100) ENCODE LZO,
	TOT_REV			VARCHAR(100) ENCODE LZO,
	PYMT_RECV_		BIGINT,
	STAT_CLAS2		BIGINT,
	FERC_SCHE2		BIGINT,
	TOT_REV_B2		BIGINT,
	TOT_REV_F		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_338_DEP_DEPL;
CREATE TABLE {schemaName}.{tableName}F1_338_DEP_DEPL
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	REPORT_PRD		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DEP_EXP			FLOAT,
	DEP_EXP_AS		FLOAT,
	AMORT_ELEC		FLOAT,
	AMORT_OTHE		FLOAT,
	AMT_TOTAL		FLOAT,
	DEP_EXP_F		FLOAT,
	DEP_EXP_A2		FLOAT,
	AMORT_ELE2		FLOAT,
	AMORT_OTH2		FLOAT,
	AMT_TOTAL_		FLOAT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_34;
CREATE TABLE {schemaName}.{tableName}F1_34
(
	RESPONDENT		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		VARCHAR(10) ENCODE LZO,
	SPPLMNT_NU		VARCHAR(10) ENCODE LZO,
	ROW_NUMBER1		VARCHAR(10) ENCODE LZO,
	ROW_SEQ			VARCHAR(10) ENCODE LZO,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	IMPORTANT_		VARCHAR(10) ENCODE LZO,
	IMPORTANT2		VARCHAR(10) ENCODE LZO,
	REPORT_PRD		VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_35;
CREATE TABLE {schemaName}.{tableName}F1_35
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	CY_OTHER_T		FLOAT,
	PREV_YR_TO		FLOAT,
	CY_OTHER_2		FLOAT,
	PREV_YR_T2		FLOAT,
	CURR_3_MON		FLOAT,
	PRIOR_3_MO		FLOAT,
	CURR_3_MO2		FLOAT,
	PRIOR_3_M2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_36;
CREATE TABLE {schemaName}.{tableName}F1_36
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	CURRENT_YR		FLOAT,
	PREVIOUS_Y		FLOAT,
	CY_ELCTRC_		FLOAT,
	PREV_YR_EL		FLOAT,
	CY_GAS_TOT		FLOAT,
	PREV_YR_GA		FLOAT,
	CY_OTHER_T		FLOAT,
	PREV_YR_OT		FLOAT,
	CY_OTHER_2		FLOAT,
	PREV_YR_O2		FLOAT,
	CY_OTHER_3		FLOAT,
	PREV_YR_O3		FLOAT,
	CY_OTHER_4		FLOAT,
	PREV_YR_O4		FLOAT,
	CURRENT_Y2		FLOAT,
	PREVIOUS_2		FLOAT,
	CY_ELCTRC2		FLOAT,
	PREV_YR_E2		FLOAT,
	CY_GAS_TO2		FLOAT,
	PREV_YR_G2		FLOAT,
	CY_OTHER_5		FLOAT,
	PREV_YR_O5		FLOAT,
	CY_OTHER_6		FLOAT,
	PREV_YR_O6		FLOAT,
	CY_OTHER_7		FLOAT,
	PREV_YR_O7		FLOAT,
	CY_OTHER_8		FLOAT,
	PREV_YR_O8		FLOAT,
	CURR_3_MON		FLOAT,
	PRIOR_3_MO		FLOAT,
	CURR_3_MO2		FLOAT,
	PRIOR_3_M2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_37;
CREATE TABLE {schemaName}.{tableName}F1_37
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DESCRIPTIO		VARCHAR(60) ENCODE LZO,
	AMOUNT			FLOAT,
	DESCRIPTI2		BIGINT,
	AMOUNT_F		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_38;
CREATE TABLE {schemaName}.{tableName}F1_38
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DFRRD_DEBI		VARCHAR(40) ENCODE LZO,
	BEGIN_YR_B		FLOAT,
	DEBITS			FLOAT,
	ACCT_CHRG_		VARCHAR(10) ENCODE LZO,
	AMOUNT_CR		FLOAT,
	YR_END_BAL		FLOAT,
	DFRRD_DEB2		FLOAT,
	BEGIN_YR_2		FLOAT,
	DEBITS_F		FLOAT,
	ACCT_CHRG2		FLOAT,
	AMOUNT_CR_		FLOAT,
	YR_END_BA2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_39;
CREATE TABLE {schemaName}.{tableName}F1_39
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	SYSTEM_NAM		VARCHAR(70) ENCODE LZO,
	TOT_MTHLY_		FLOAT,
	MTHLY_SALE		FLOAT,
	MEGAWATTS		FLOAT,
	DAY_OF_MON		FLOAT,
	HOUR			VARCHAR(10) ENCODE LZO,
	SYSTEM_NA2		FLOAT,
	TOT_MTHLY2		FLOAT,
	MTHLY_SAL2		FLOAT,
	MEGAWATTS_		FLOAT,
	DAY_OF_MO2		FLOAT,
	HOUR_F			FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_397_ISORTO_STL;
CREATE TABLE {schemaName}.{tableName}F1_397_ISORTO_STL
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	REPORT_PRD		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DESC_ITEM		VARCHAR(50) ENCODE LZO,
	BAL_END_Q1		VARCHAR(100) ENCODE LZO,
	BAL_END_Q2		VARCHAR(100) ENCODE LZO,
	BAL_END_Q3		VARCHAR(100) ENCODE LZO,
	BAL_END_Q4		VARCHAR(100) ENCODE LZO,
	DESC_ITEM_		BIGINT,
	BAL_END_Q5		BIGINT,
	BAL_END_Q6		BIGINT,
	BAL_END_Q7		BIGINT,
	BAL_END_Q8		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_398_ANCL_PS;
CREATE TABLE {schemaName}.{tableName}F1_398_ANCL_PS
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	REPORT_PRD		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	PURCH_NUM_		BIGINT,
	PURCH_UNIT		VARCHAR(20) ENCODE LZO,
	PURCH_DOLL		BIGINT,
	SOLD_NUM_U		BIGINT,
	SOLD_UNIT		VARCHAR(20) ENCODE LZO,
	SOLD_DOLLA		BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	PURCH_NUM2		BIGINT,
	PURCH_UNI2		BIGINT,
	PURCH_DOL2		BIGINT,
	SOLD_NUM_2		BIGINT,
	SOLD_UNIT_		BIGINT,
	SOLD_DOLL2		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_399_MTH_PEAK;
CREATE TABLE {schemaName}.{tableName}F1_399_MTH_PEAK
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	REPORT_PRD		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	SYSTEM_NAM		VARCHAR(80) ENCODE LZO,
	TOT_MTH_EN		FLOAT,
	MTH_LOSS		FLOAT,
	MEGAWATTS		FLOAT,
	DAY_OF_MTH		FLOAT,
	HOUR_OF_DA		FLOAT,
	SYSTEM_NA2		FLOAT,
	TOT_MTH_E2		FLOAT,
	MTH_LOSS_F		FLOAT,
	MEGAWATTS_		FLOAT,
	DAY_OF_MT2		FLOAT,
	HOUR_OF_D2		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_4;
CREATE TABLE {schemaName}.{tableName}F1_4
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	ACCT_SUBDI		VARCHAR(20) ENCODE LZO,
	BEGIN_YR_B		FLOAT,
	ACCT_DEFER		VARCHAR(20) ENCODE LZO,
	AMT_DEFERR		FLOAT,
	CRNT_ALLOC		VARCHAR(20) ENCODE LZO,
	CRNT_ALLO2		FLOAT,
	ADJUSTMENT		FLOAT,
	YR_END_BAL		FLOAT,
	ALLOC_INCM		VARCHAR(100) ENCODE LZO,
	ACCT_SUBD2		FLOAT,
	BEGIN_YR_2		FLOAT,
	ACCT_DEFE2		FLOAT,
	AMT_DEFER2		FLOAT,
	CRNT_ALLO3		FLOAT,
	CRNT_ALLO4		FLOAT,
	ADJUSTMEN2		FLOAT,
	YR_END_BA2		FLOAT,
	ALLOC_INC2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_40;
CREATE TABLE {schemaName}.{tableName}F1_40
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	ACCOUNT			VARCHAR(40) ENCODE LZO,
	BEGIN_YR_B		FLOAT,
	YR_END_BAL		FLOAT,
	DEPT_MATER		VARCHAR(20) ENCODE LZO,
	ACCOUNT_F		FLOAT,
	BEGIN_YR_2		FLOAT,
	YR_END_BA2		FLOAT,
	DEPT_MATE2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_400A_ISO_PEAK;
CREATE TABLE {schemaName}.{tableName}F1_400A_ISO_PEAK
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	REPORT_PRD		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	SYSTEM_NAM		VARCHAR(50) ENCODE LZO,
	MTH_PEAK		BIGINT,
	DAY_OF_MTH		BIGINT,
	HOUR_OF_DA		BIGINT,
	IMPORTS			BIGINT,
	EXPORTS			BIGINT,
	THROUGH_OU		BIGINT,
	NET_SERV		BIGINT,
	PTP_SERV		BIGINT,
	TOT_USE			BIGINT,
	SYSTEM_NA2		BIGINT,
	MTH_PEAK_F		BIGINT,
	DAY_OF_MT2		BIGINT,
	HOUR_OF_D2		BIGINT,
	IMPORTS_F		BIGINT,
	EXPORTS_F		BIGINT,
	THROUGH_O2		BIGINT,
	NET_SERV_F		BIGINT,
	PTP_SERV_F		BIGINT,
	TOT_USE_F		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_400_SYS_PEAK;
CREATE TABLE {schemaName}.{tableName}F1_400_SYS_PEAK
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	REPORT_PRD		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	SYSTEM_NAM		VARCHAR(100) ENCODE LZO,
	MTH_PEAK		BIGINT,
	DAY_OF_MTH		BIGINT,
	HOUR_OF_DA		BIGINT,
	FIRM_FOR_S		BIGINT,
	FIRM_FOR_O		BIGINT,
	PTP_RES			BIGINT,
	OTHER_LT_F		BIGINT,
	SHORT_PTP_		BIGINT,
	OTHER_SERV		BIGINT,
	SYSTEM_NA2		BIGINT,
	MTH_PEAK_F		BIGINT,
	DAY_OF_MT2		BIGINT,
	HOUR_OF_D2		BIGINT,
	FIRM_FOR_2		BIGINT,
	FIRM_FOR_3		BIGINT,
	PTP_RES_F		BIGINT,
	OTHER_LT_2		BIGINT,
	SHORT_PTP2		BIGINT,
	OTHER_SER2		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_41;
CREATE TABLE {schemaName}.{tableName}F1_41
(
	RESPONDENT		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		VARCHAR(10) ENCODE LZO,
	SPPLMNT_NU		VARCHAR(10) ENCODE LZO,
	ROW_NUMBER1		VARCHAR(10) ENCODE LZO,
	ROW_SEQ			VARCHAR(10) ENCODE LZO,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	PYRL_PER_E		VARCHAR(10) ENCODE LZO,
	TOT_RGLR_F		VARCHAR(10) ENCODE LZO,
	TOT_PTE_TE		VARCHAR(10) ENCODE LZO,
	TOT_EMP			VARCHAR(10) ENCODE LZO,
	PYRL_PER_2		VARCHAR(10) ENCODE LZO,
	TOT_RGLR_2		VARCHAR(10) ENCODE LZO,
	TOT_PTE_T2		VARCHAR(10) ENCODE LZO,
	TOT_EMP_F		VARCHAR(10) ENCODE LZO,
	REPORT_PRD		VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_42;
CREATE TABLE {schemaName}.{tableName}F1_42
(
	RESPONDENT		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		VARCHAR(10) ENCODE LZO,
	SPPLMNT_NU		VARCHAR(10) ENCODE LZO,
	ROW_NUMBER1		VARCHAR(10) ENCODE LZO,
	ROW_SEQ			VARCHAR(10) ENCODE LZO,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DSC_AND_LO		VARCHAR(100) ENCODE LZO,
	BEGIN_YR_B		VARCHAR(100) ENCODE LZO,
	PRCHS_SALE		VARCHAR(100) ENCODE LZO,
	YR_END_BAL		VARCHAR(100) ENCODE LZO,
	DSC_AND_L2		VARCHAR(100) ENCODE LZO,
	BEGIN_YR_2		VARCHAR(100) ENCODE LZO,
	PRCHS_SAL2		VARCHAR(100) ENCODE LZO,
	YR_END_BA2		VARCHAR(100) ENCODE LZO,
	REPORT_PRD		VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_429_TRANS_AFF;
CREATE TABLE {schemaName}.{tableName}F1_429_TRANS_AFF
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	REPORT_PRD		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DESC_GOOD_		VARCHAR(60) ENCODE LZO,
	NAME_COMP		VARCHAR(60) ENCODE LZO,
	ACCT_CORC		VARCHAR(30) ENCODE LZO,
	AMT_CORC		BIGINT,
	DESC_GOOD2		BIGINT,
	NAME_COMP_		BIGINT,
	ACCT_CORC_		BIGINT,
	AMT_CORC_F		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_43;
CREATE TABLE {schemaName}.{tableName}F1_43
(
	RESPONDENT		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		VARCHAR(10) ENCODE LZO,
	SPPLMNT_NU		VARCHAR(10) ENCODE LZO,
	ROW_NUMBER1		VARCHAR(10) ENCODE LZO,
	ROW_SEQ			VARCHAR(10) ENCODE LZO,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	NOTE_FIN_S		VARCHAR(10) ENCODE LZO,
	NOTE_FIN_2		VARCHAR(10) ENCODE LZO,
	REPORT_PRD		VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_44;
CREATE TABLE {schemaName}.{tableName}F1_44
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	BEGIN_YR_B		FLOAT,
	YRCHG_ADDI		FLOAT,
	YRCHG_AMRT		FLOAT,
	YRCHG_OTHR		FLOAT,
	YR_END_BAL		FLOAT,
	BEGIN_YR_2		FLOAT,
	YRCHG_ADD2		FLOAT,
	YRCHG_AMR2		FLOAT,
	YRCHG_OTH2		FLOAT,
	YR_END_BA2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_45;
CREATE TABLE {schemaName}.{tableName}F1_45
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	OFFICER_TI		VARCHAR(60) ENCODE LZO,
	OFFICER_NA		VARCHAR(40) ENCODE LZO,
	OFFICER_SA		FLOAT,
	OFFICER_T2		FLOAT,
	OFFICER_N2		FLOAT,
	OFFICER_S2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_46;
CREATE TABLE {schemaName}.{tableName}F1_46
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	OTHR_DFR_C		VARCHAR(40) ENCODE LZO,
	BEGIN_YR_B		FLOAT,
	CONTRA_ACC		VARCHAR(20) ENCODE LZO,
	AMOUNT_DR		FLOAT,
	CREDITS			FLOAT,
	YR_END_BAL		FLOAT,
	OTHR_DFR_2		FLOAT,
	BEGIN_YR_2		FLOAT,
	CONTRA_AC2		FLOAT,
	AMOUNT_DR_		FLOAT,
	CREDITS_F		FLOAT,
	YR_END_BA2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_47;
CREATE TABLE {schemaName}.{tableName}F1_47
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	ITEM			VARCHAR(500) ENCODE LZO,
	AMOUNT			FLOAT,
	ITEM_F			FLOAT,
	AMOUNT_F		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_48;
CREATE TABLE {schemaName}.{tableName}F1_48
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DSC_PURP_A		VARCHAR(60) ENCODE LZO,
	DEBITS			FLOAT,
	ACCT_CHRG_		VARCHAR(200) ENCODE LZO,
	AMOUNT_CR		FLOAT,
	YR_END_BAL		FLOAT,
	DSC_PURP_2		FLOAT,
	DEBITS_F		FLOAT,
	ACCT_CHRG2		FLOAT,
	AMOUNT_CR_		FLOAT,
	YR_END_BA2		FLOAT,
	BEG_YR_BAL		FLOAT,
	BEG_YR_BA2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_49;
CREATE TABLE {schemaName}.{tableName}F1_49
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DSC_PURP		VARCHAR(50) ENCODE LZO,
	DR_ACCT_NU		VARCHAR(20) ENCODE LZO,
	DR_AMOUNT		FLOAT,
	CREDITS			FLOAT,
	END_YR_BAL		FLOAT,
	DSC_PURP_F		FLOAT,
	DR_ACCT_N2		FLOAT,
	DR_AMOUNT_		FLOAT,
	CREDITS_F		FLOAT,
	END_YR_BA2		FLOAT,
	BEG_YR_BAL		FLOAT,
	BEG_YR_BA2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_5;
CREATE TABLE {schemaName}.{tableName}F1_5
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	ACCT_SUBDI		VARCHAR(70) ENCODE LZO,
	BEGIN_YR_B		FLOAT,
	YR_END_BAL		FLOAT,
	ACCT_SUBD2		FLOAT,
	BEGIN_YR_2		FLOAT,
	YR_END_BA2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_50;
CREATE TABLE {schemaName}.{tableName}F1_50
(
	RESPONDENT		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		VARCHAR(10) ENCODE LZO,
	SPPLMNT_NU		VARCHAR(10) ENCODE LZO,
	ROW_NUMBER1		VARCHAR(10) ENCODE LZO,
	ROW_SEQ			VARCHAR(10) ENCODE LZO,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	NOTE			VARCHAR(10) ENCODE LZO,
	AMOUNT			FLOAT,
	CAPITALIZA		FLOAT,
	COST_RATE		FLOAT,
	GROSS			FLOAT,
	RATE			FLOAT,
	RATE_BORRO		FLOAT,
	RATE_OTHER		FLOAT,
	NOTE_F			FLOAT,
	AMOUNT_F		FLOAT,
	CAPITALIZ2		FLOAT,
	COST_RATE_		FLOAT,
	GROSS_F			FLOAT,
	RATE_F			FLOAT,
	RATE_BORR2		FLOAT,
	RATE_OTHE2		FLOAT,
	REPORT_PRD		VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_51;
CREATE TABLE {schemaName}.{tableName}F1_51
(
	RESPONDENT		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		VARCHAR(10) ENCODE LZO,
	SPPLMNT_NU		VARCHAR(10) ENCODE LZO,
	ROW_NUMBER1		VARCHAR(10) ENCODE LZO,
	ROW_SEQ			VARCHAR(10) ENCODE LZO,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	ITEM			VARCHAR(100) ENCODE LZO,
	AMOUNT			VARCHAR(100) ENCODE LZO,
	ACCOUNT			VARCHAR(100) ENCODE LZO,
	ITEM_F			VARCHAR(100) ENCODE LZO,
	AMOUNT_F		VARCHAR(100) ENCODE LZO,
	ACCOUNT_F		VARCHAR(100) ENCODE LZO,
	REPORT_PRD		VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_52;
CREATE TABLE {schemaName}.{tableName}F1_52
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	BEGIN_YR_B		FLOAT,
	ADDITION		FLOAT,
	RETIREMENT		FLOAT,
	ADJUSTMENT		FLOAT,
	TRANSFERS		FLOAT,
	YR_END_BAL		FLOAT,
	BEGIN_YR_2		FLOAT,
	ADDITION_F		FLOAT,
	RETIREMEN2		FLOAT,
	ADJUSTMEN2		FLOAT,
	TRANSFERS_		FLOAT,
	YR_END_BA2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_53;
CREATE TABLE {schemaName}.{tableName}F1_53
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ		    BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	PROJECT_NO		BIGINT,
	PLANT_NAME		VARCHAR(30) ENCODE LZO,
	PLANT_KIND		VARCHAR(20) ENCODE LZO,
	YR_CONST		VARCHAR(100) ENCODE LZO,
	YR_INSTALL		VARCHAR(100) ENCODE LZO,
	TOT_CAPACI		VARCHAR(100) ENCODE LZO,
	PEAK_DEMAN		FLOAT,
	PLANT_HOUR		FLOAT,
	PLANT_CAPA		FLOAT,
	AVG_NUM_OF		FLOAT,
	NET_GENERA		FLOAT,
	ENERGY_USE		FLOAT,
	NET_LOAD		FLOAT,
	COST_LAND		FLOAT,
	COST_STRUC		FLOAT,
	COST_FACIL		FLOAT,
	COST_WHEEL		FLOAT,
	COST_ELECT		FLOAT,
	COST_MISC_		FLOAT,
	COST_ROADS		FLOAT,
	ASSET_RETI		FLOAT,
	COST_OF_PL		FLOAT,
	COST_PER_K		FLOAT,
	EXPNS_OPER		FLOAT,
	EXPNS_WATE		FLOAT,
	EXPNS_PUMP		FLOAT,
	EXPNS_ELEC		FLOAT,
	EXPNS_MISC		FLOAT,
	EXPNS_RENT		FLOAT,
	EXPNS_ENGN		FLOAT,
	EXPNS_STRU		FLOAT,
	EXPNS_DAMS		FLOAT,
	EXPNS_PLAN		FLOAT,
	EXPNS_MIS2		FLOAT,
	EXPNS_PROD		FLOAT,
	PUMPING_EX		FLOAT,
	TOT_PRDCTN		FLOAT,
	EXPNS_KWH		FLOAT,
	PROJECT_N2		FLOAT,
	PLANT_NAM2		FLOAT,
	PLANT_KIN2		FLOAT,
	YR_CONST_F		FLOAT,
	YR_INSTAL2		FLOAT,
	TOT_CAPAC2		FLOAT,
	PEAK_DEMA2		FLOAT,
	PLANT_HOU2		FLOAT,
	PLANT_CAP2		FLOAT,
	AVG_NUM_O2		FLOAT,
	NET_GENER2		FLOAT,
	ENERGY_US2		FLOAT,
	NET_LOAD_F		FLOAT,
	COST_LAND_		FLOAT,
	COST_STRU2		FLOAT,
	COST_FACI2		FLOAT,
	COST_WHEE2		FLOAT,
	COST_ELEC2		FLOAT,
	COST_MISC2		FLOAT,
	COST_ROAD2		FLOAT,
	ASSET_RET2		FLOAT,
	COST_OF_P2		FLOAT,
	COST_PER_2		FLOAT,
	EXPNS_OPE2		FLOAT,
	EXPNS_WAT2		FLOAT,
	EXPNS_PUM2		FLOAT,
	EXPNS_ELE2		FLOAT,
	EXPNS_MIS3		FLOAT,
	EXPNS_REN2		FLOAT,
	EXPNS_ENG2		FLOAT,
	EXPNS_STR2		FLOAT,
	EXPNS_DAM2		FLOAT,
	EXPNS_PLA2		FLOAT,
	EXPNS_MIS4		FLOAT,
	EXPNS_PRO2		FLOAT,
	PUMPING_E2		FLOAT,
	TOT_PRDCT2		FLOAT,
	EXPNS_KWH_		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_54;
CREATE TABLE {schemaName}.{tableName}F1_54
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	ATHRTY_CO_		VARCHAR(40) ENCODE LZO,
	STTSTCL_CL		VARCHAR(10) ENCODE LZO,
	RTSCHED_TR		VARCHAR(20) ENCODE LZO,
	AVGMTH_BIL		VARCHAR(100) ENCODE LZO,
	AVGMTH_NCP		VARCHAR(100) ENCODE LZO,
	AVGMTH_CP_		VARCHAR(100) ENCODE LZO,
	MWH_PURCHA		FLOAT,
	MWH_RECV		FLOAT,
	MWH_DELVD		FLOAT,
	DMND_CHARG		FLOAT,
	ERG_CHARGE		FLOAT,
	OTHR_CHARG		FLOAT,
	SETTLEMENT		FLOAT,
	ATHRTY_CO2		FLOAT,
	STTSTCL_C2		FLOAT,
	RTSCHED_T2		FLOAT,
	AVGMTH_BI2		FLOAT,
	AVGMTH_NC2		FLOAT,
	AVGMTH_CP2		FLOAT,
	MWH_PURCH2		FLOAT,
	MWH_RECV_F		FLOAT,
	MWH_DELVD_		FLOAT,
	DMND_CHAR2		FLOAT,
	ERG_CHARG2		FLOAT,
	OTHR_CHAR2		FLOAT,
	SETTLEMEN2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_55;
CREATE TABLE {schemaName}.{tableName}F1_55
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	PARTICULAR		VARCHAR(500) ENCODE LZO,
	AMOUNT			FLOAT,
	PARTICULA2		FLOAT,
	AMOUNT_F		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_56;
CREATE TABLE {schemaName}.{tableName}F1_56
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ		    BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DESCRIPTIO		VARCHAR(50) ENCODE LZO,
	ASSESS_REG		FLOAT,
	UTILITY_EX		FLOAT,
	TOT_EXPN_T		FLOAT,
	DFRRD_ACCT		FLOAT,
	DEPARTMENT		VARCHAR(20) ENCODE LZO,
	ACCT_NBR		VARCHAR(10) ENCODE LZO,
	AMT_CHRG_C		FLOAT,
	DFRRD_ACC2		FLOAT,
	CONTRA_ACC		VARCHAR(20) ENCODE LZO,
	AMT_AMRTZD		FLOAT,
	DFRRD_ACC3		FLOAT,
	DESCRIPTI2		FLOAT,
	ASSESS_RE2		FLOAT,
	UTILITY_E2		FLOAT,
	TOT_EXPN_2		FLOAT,
	DFRRD_ACC4		FLOAT,
	DEPARTMEN2		FLOAT,
	ACCT_NBR_F		FLOAT,
	AMT_CHRG_2		FLOAT,
	DFRRD_ACC5		FLOAT,
	CONTRA_AC2		FLOAT,
	AMT_AMRTZ2		FLOAT,
	DFRRD_ACC6		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_57;
CREATE TABLE {schemaName}.{tableName}F1_57
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ		BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	CO_CNTRL_N		VARCHAR(50) ENCODE LZO,
	BUSN_TYP		VARCHAR(30) ENCODE LZO,
	PRCNT_STK_		VARCHAR(30) ENCODE LZO,
	FOOTNOTE_R		VARCHAR(30) ENCODE LZO,
	CO_CNTRL_2		BIGINT,
	BUSN_TYP_F		BIGINT,
	PRCNT_STK2		BIGINT,
	FOOTNOTE_2		BIGINT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_58;
CREATE TABLE {schemaName}.{tableName}F1_58
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	ITEM			VARCHAR(200) ENCODE LZO,
	PRMRY_ACCO		VARCHAR(100) ENCODE LZO,
	AMOUNT			FLOAT,
	ITEM_F			FLOAT,
	PRMRY_ACC2		FLOAT,
	AMOUNT_F		FLOAT,
	PREV_BALAN		FLOAT,
	PREV_BALA2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_59;
CREATE TABLE {schemaName}.{tableName}F1_59
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	CLASSIFICA		VARCHAR(50) ENCODE LZO,
	DESCRIPTIO		VARCHAR(200) ENCODE LZO,
	COST_INCR_		FLOAT,
	COST_INCR2		FLOAT,
	ACCOUNT			VARCHAR(10) ENCODE LZO,
	AMOUNT			FLOAT,
	UNAMRTZD_A		FLOAT,
	CLASSIFIC2		FLOAT,
	DESCRIPTI2		FLOAT,
	COST_INCR3		FLOAT,
	COST_INCR4		FLOAT,
	ACCOUNT_F		FLOAT,
	AMOUNT_F		FLOAT,
	UNAMRTZD_2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_6;
CREATE TABLE {schemaName}.{tableName}F1_6
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ		BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	NOTES		VARCHAR(4300) ENCODE LZO,
	NOTES_F		BIGINT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_60;
CREATE TABLE {schemaName}.{tableName}F1_60
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	SCHED_NUM_		VARCHAR(40) ENCODE LZO,
	MWH_SOLD		FLOAT,
	REVENUE			FLOAT,
	AVG_NUM_CS		FLOAT,
	KWH_SALE_C		FLOAT,
	REVENUE_KW		VARCHAR(100) ENCODE LZO,
	SCHED_NUM2		FLOAT,
	MWH_SOLD_F		FLOAT,
	REVENUE_F		FLOAT,
	AVG_NUM_C2		FLOAT,
	KWH_SALE_2		FLOAT,
	REVENUE_K2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_61;
CREATE TABLE {schemaName}.{tableName}F1_61
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	COMPANY_NA		VARCHAR(100) ENCODE LZO,
	STTSTCL_CL		VARCHAR(100) ENCODE LZO,
	FERC_RT_SC		VARCHAR(100) ENCODE LZO,
	AVG_MTHLY_		VARCHAR(100) ENCODE LZO,
	AVG_MTHLY2		VARCHAR(100) ENCODE LZO,
	AVG_MTHLY3		VARCHAR(100) ENCODE LZO,
	MWH_SOLD		FLOAT,
	DEMAND_CHA		FLOAT,
	ENERGY_CHA		FLOAT,
	OTHER_CHAR		FLOAT,
	TOT_REVENU		FLOAT,
	COMPANY_N2		FLOAT,
	STTSTCL_C2		FLOAT,
	FERC_RT_S2		FLOAT,
	AVG_MTHLY4		FLOAT,
	AVG_MTHLY5		FLOAT,
	AVG_MTHLY6		FLOAT,
	MWH_SOLD_F		FLOAT,
	DEMAND_CH2		FLOAT,
	ENERGY_CH2		FLOAT,
	OTHER_CHA2		FLOAT,
	TOT_REVEN2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_62;
CREATE TABLE {schemaName}.{tableName}F1_62
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	TOTAL_COST		FLOAT,
	BEGIN_YR_T		FLOAT,
	EQTY_ERNG_		FLOAT,
	YR_REVENUE		FLOAT,
	YR_END_TOT		FLOAT,
	GAIN_LOSS_		FLOAT,
	TOTAL_COS2		FLOAT,
	BEGIN_YR_2		FLOAT,
	EQTY_ERNG2		FLOAT,
	YR_REVENU2		FLOAT,
	YR_END_TO2		FLOAT,
	GAIN_LOSS2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_63;
CREATE TABLE {schemaName}.{tableName}F1_63
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	REMARKS			VARCHAR(20) ENCODE LZO,
	STK_HLD_IN		VARCHAR(100) ENCODE LZO,
	REMARKS_F		BIGINT,
	STK_HLD_I2		BIGINT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_64;
CREATE TABLE {schemaName}.{tableName}F1_64
(
	RESPONDENT		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		VARCHAR(10) ENCODE LZO,
	SPPLMNT_NU		VARCHAR(10) ENCODE LZO,
	ROW_NUMBER1		VARCHAR(10) ENCODE LZO,
	ROW_SEQ			VARCHAR(10) ENCODE LZO,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	STOCK_BOOK		VARCHAR(100) ENCODE LZO,
	VOTE_CAST_		VARCHAR(100) ENCODE LZO,
	PROXY_VOTE		VARCHAR(100) ENCODE LZO,
	MEETING_IN		VARCHAR(100) ENCODE LZO,
	VOTES_AS_O		VARCHAR(100) ENCODE LZO,
	HOLDER_INF		VARCHAR(100) ENCODE LZO,
	VOTE_TOTAL		VARCHAR(100) ENCODE LZO,
	CMMN_STOCK		VARCHAR(100) ENCODE LZO,
	PREFERRED_		VARCHAR(100) ENCODE LZO,
	OTHER_TOTA		VARCHAR(100) ENCODE LZO,
	STOCK_BOO2		VARCHAR(100) ENCODE LZO,
	VOTE_CAST2		VARCHAR(100) ENCODE LZO,
	PROXY_VOT2		VARCHAR(100) ENCODE LZO,
	MEETING_I2		VARCHAR(100) ENCODE LZO,
	VOTES_AS_2		VARCHAR(100) ENCODE LZO,
	HOLDER_IN2		VARCHAR(100) ENCODE LZO,
	VOTE_TOTA2		VARCHAR(100) ENCODE LZO,
	CMMN_STOC2		VARCHAR(100) ENCODE LZO,
	PREFERRED2		VARCHAR(100) ENCODE LZO,
	OTHER_TOT2		VARCHAR(100) ENCODE LZO,
	REPORT_PRD		VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_65;
CREATE TABLE {schemaName}.{tableName}F1_65
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	CLASSIFICA		VARCHAR(70) ENCODE LZO,
	DRCT_PYRL_		FLOAT,
	ALLOC_OF_P		FLOAT,
	TOTAL			FLOAT,
	CLASSIFIC2		FLOAT,
	DRCT_PYRL2		FLOAT,
	ALLOC_OF_2		FLOAT,
	TOTAL_F			FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_66;
CREATE TABLE {schemaName}.{tableName}F1_66
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	SUBSTN_LOC		VARCHAR(60) ENCODE LZO,
	SUBSTN_CHA		VARCHAR(30) ENCODE LZO,
	PRMRY_VOLT		VARCHAR(100) ENCODE LZO,
	SCNDRY_VOL		VARCHAR(100) ENCODE LZO,
	TRTRY_VOLT		VARCHAR(100) ENCODE LZO,
	SUBSTN_CAP		FLOAT,
	NO_TRANSFO		FLOAT,
	NO_SPARES		FLOAT,
	EQUIP_TYPE		VARCHAR(30) ENCODE LZO,
	NO_OF_UNIT		FLOAT,
	TOTAL_CAPA		FLOAT,
	SUBSTN_LO2		FLOAT,
	SUBSTN_CH2		FLOAT,
	PRMRY_VOL2		FLOAT,
	SCNDRY_VO2		FLOAT,
	TRTRY_VOL2		FLOAT,
	SUBSTN_CA2		FLOAT,
	NO_TRANSF2		FLOAT,
	NO_SPARES_		FLOAT,
	EQUIP_TYP2		FLOAT,
	NO_OF_UNI2		FLOAT,
	TOTAL_CAP2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_67;
CREATE TABLE {schemaName}.{tableName}F1_67
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	TAX_KIND		VARCHAR(30) ENCODE LZO,
	TAX_ACCRD_		FLOAT,
	PRPD_TAX_B		FLOAT,
	TAX_CHRG_D		FLOAT,
	TAX_PAID_D		FLOAT,
	ADJUSTMENT		FLOAT,
	TAX_ACCRD2		FLOAT,
	PRPD_TAX_E		FLOAT,
	ELECTRIC		FLOAT,
	XTRAORDNRY		FLOAT,
	RETERNG_AD		FLOAT,
	OTHER			FLOAT,
	TAX_KIND_F		FLOAT,
	TAX_ACCRD3		FLOAT,
	PRPD_TAX_2		FLOAT,
	TAX_CHRG_2		FLOAT,
	TAX_PAID_2		FLOAT,
	ADJUSTMEN2		FLOAT,
	TAX_ACCRD4		FLOAT,
	PRPD_TAX_3		FLOAT,
	ELECTRIC_F		FLOAT,
	XTRAORDNR2		FLOAT,
	RETERNG_A2		FLOAT,
	OTHER_F			FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_68;
CREATE TABLE {schemaName}.{tableName}F1_68
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	COST_DSC		VARCHAR(40) ENCODE LZO,
	CHRG_AMT_T		FLOAT,
	RECOGNIZED		FLOAT,
	ACCT_WRTTN		VARCHAR(10) ENCODE LZO,
	AMT_WRTTN_		FLOAT,
	YR_END_BAL		FLOAT,
	COST_DSC_F		FLOAT,
	CHRG_AMT_2		FLOAT,
	RECOGNIZE2		FLOAT,
	ACCT_WRTT2		FLOAT,
	AMT_WRTTN2		FLOAT,
	YR_END_BA2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_69;
CREATE TABLE {schemaName}.{tableName}F1_69
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	OTHER			VARCHAR(20) ENCODE LZO,
	SERVICE_PL		FLOAT,
	PROPUNDR_C		FLOAT,
	PLNT_PRCHS		FLOAT,
	CMPLT_CONS		FLOAT,
	XPRMNT_PLN		FLOAT,
	IN_SRVC_TO		FLOAT,
	LEASED_TO_		FLOAT,
	HELD_FTRE_		FLOAT,
	CONST_WRK_		FLOAT,
	ACQSTN_ADJ		FLOAT,
	TOT_UTLTY_		FLOAT,
	ACCUM_PRVS		FLOAT,
	NET_UTLTY_		FLOAT,
	IN_SRVCE_D		FLOAT,
	AMRTZD_DPL		FLOAT,
	AMRTZD_UGR		FLOAT,
	AMRTZ_UTLT		FLOAT,
	TOT_IN_SER		FLOAT,
	LEASED_OTH		FLOAT,
	AMRTZ_DPLT		FLOAT,
	TOT_LEASED		FLOAT,
	DEPR_FTRE_		FLOAT,
	AMORTIZATI		FLOAT,
	TOTAL_FTRE		FLOAT,
	ABNDN_LEAS		FLOAT,
	AMRTZPLNT_		FLOAT,
	TOT_ACCUM_		FLOAT,
	OTHER_F			FLOAT,
	SERVICE_P2		FLOAT,
	PROPUNDR_2		FLOAT,
	PLNT_PRCH2		FLOAT,
	CMPLT_CON2		FLOAT,
	XPRMNT_PL2		FLOAT,
	IN_SRVC_T2		FLOAT,
	LEASED_TO2		FLOAT,
	HELD_FTRE2		FLOAT,
	CONST_WRK2		FLOAT,
	ACQSTN_AD2		FLOAT,
	TOT_UTLTY2		FLOAT,
	ACCUM_PRV2		FLOAT,
	NET_UTLTY2		FLOAT,
	IN_SRVCE_2		FLOAT,
	AMRTZD_DP2		FLOAT,
	AMRTZD_UG2		FLOAT,
	AMRTZ_UTL2		FLOAT,
	TOT_IN_SE2		FLOAT,
	LEASED_OT2		FLOAT,
	AMRTZ_DPL2		FLOAT,
	TOT_LEASE2		FLOAT,
	DEPR_FTRE2		FLOAT,
	AMORTIZAT2		FLOAT,
	TOTAL_FTR2		FLOAT,
	ABNDN_LEA2		FLOAT,
	AMRTZPLNT2		FLOAT,
	TOT_ACCUM2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_7;
CREATE TABLE {schemaName}.{tableName}F1_7
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	ACCT_DSC		VARCHAR(100) ENCODE LZO,
	BGN_YR_BAL		FLOAT,
	CHG_YR_DR_		FLOAT,
	CHG_YR_CR_		FLOAT,
	CHG_YR_DR2		FLOAT,
	CHG_YR_CR2		FLOAT,
	DR_ADJ_ACC		VARCHAR(100) ENCODE LZO,
	DR_ADJ_AMT		FLOAT,
	CR_ADJ_ACC		VARCHAR(100) ENCODE LZO,
	END_YR_BAL		FLOAT,
	CR_ADJ_AMT		FLOAT,
	ACCT_DSC_F		FLOAT,
	BGN_YR_BA2		FLOAT,
	CHG_YR_DR3		FLOAT,
	CHG_YR_CR3		FLOAT,
	CHG_YR_DR4		FLOAT,
	CHG_YR_CR4		FLOAT,
	DR_ADJ_AC2		FLOAT,
	DR_ADJ_AM2		FLOAT,
	CR_ADJ_AC2		FLOAT,
	CR_ADJ_AM2		FLOAT,
	END_YR_BA2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_70;
CREATE TABLE {schemaName}.{tableName}F1_70
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DESCRIPTIO		VARCHAR(100) ENCODE LZO,
	WORK_IN_PR		FLOAT,
	DESCRIPTI2		FLOAT,
	WORK_IN_P2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_71;
CREATE TABLE {schemaName}.{tableName}F1_71
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DESIGNATIO		VARCHAR(40) ENCODE LZO,
	DESIGNATI2		VARCHAR(30) ENCODE LZO,
	LINE_LENGT		VARCHAR(100) ENCODE LZO,
	STRUCTURE_		VARCHAR(20) ENCODE LZO,
	STRUCTURE2		VARCHAR(100) ENCODE LZO,
	CRCT_PRESE		FLOAT,
	CRCT_ULTIM		FLOAT,
	CNDCTR_SIZ		VARCHAR(100) ENCODE LZO,
	CNDCTR_SPE		VARCHAR(10) ENCODE LZO,
	CNDCTR_CON		VARCHAR(20) ENCODE LZO,
	VOLTAGE			FLOAT,
	COST_LAND		FLOAT,
	COST_POLES		FLOAT,
	COST_CNDCT		FLOAT,
	ASSET_RETI		FLOAT,
	COST_TOTAL		FLOAT,
	DESIGNATI3		FLOAT,
	DESIGNATI4		FLOAT,
	LINE_LENG2		FLOAT,
	STRUCTURE3		FLOAT,
	STRUCTURE4		FLOAT,
	CRCT_PRES2		FLOAT,
	CRCT_ULTI2		FLOAT,
	CNDCTR_SI2		FLOAT,
	CNDCTR_SP2		FLOAT,
	CNDCTR_CO2		FLOAT,
	VOLTAGE_F		FLOAT,
	COST_LAND_		FLOAT,
	COST_POLE2		FLOAT,
	COST_CNDC2		FLOAT,
	ASSET_RET2		FLOAT,
	COST_TOTA2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_72;
CREATE TABLE {schemaName}.{tableName}F1_72
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	ATHRTY_CO_		VARCHAR(30) ENCODE LZO,
	MWH_RECV		FLOAT,
	MWH_DELVD		FLOAT,
	DEMAND_CHR		FLOAT,
	ERG_CHRG		FLOAT,
	OTHR_CHRG		FLOAT,
	XMSSN_TOT_		FLOAT,
	ATHRTY_CO2		FLOAT,
	MWH_RECV_F		FLOAT,
	MWH_DELVD_		FLOAT,
	DEMAND_CH2		FLOAT,
	ERG_CHRG_F		FLOAT,
	OTHR_CHRG_		FLOAT,
	XMSSN_TOT2		FLOAT,
	STAT_CLASS		VARCHAR(10) ENCODE LZO,
	STAT_CLAS2		BIGINT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_73;
CREATE TABLE {schemaName}.{tableName}F1_73
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	PAYMENT_BY		VARCHAR(50) ENCODE LZO,
	ERG_RECV_F		VARCHAR(40) ENCODE LZO,
	ERG_DELVD_		VARCHAR(40) ENCODE LZO,
	STTSTCL_CL		VARCHAR(10) ENCODE LZO,
	RTSCHED_TR		VARCHAR(20) ENCODE LZO,
	RECEIPT_PO		VARCHAR(30) ENCODE LZO,
	DELIVERY_P		VARCHAR(30) ENCODE LZO,
	BILLING_DE		FLOAT,
	MWH_RECV		FLOAT,
	MWH_DELVD		FLOAT,
	DMND_CHARG		FLOAT,
	ERG_CHARGE		FLOAT,
	OTHR_CHARG		FLOAT,
	TOT_REVENU		FLOAT,
	PAYMENT_B2		FLOAT,
	ERG_RECV_2		FLOAT,
	ERG_DELVD2		FLOAT,
	STTSTCL_C2		FLOAT,
	RTSCHED_T2		FLOAT,
	RECEIPT_P2		FLOAT,
	DELIVERY_2		FLOAT,
	BILLING_D2		FLOAT,
	MWH_RECV_F		FLOAT,
	MWH_DELVD_		FLOAT,
	DMND_CHAR2		FLOAT,
	ERG_CHARG2		FLOAT,
	OTHR_CHAR2		FLOAT,
	TOT_REVEN2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_74;
CREATE TABLE {schemaName}.{tableName}F1_74
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DESIGNATIO		VARCHAR(100) ENCODE LZO,
	DESIGNATI2		VARCHAR(100) ENCODE LZO,
	VOLTAGE_OP		VARCHAR(100) ENCODE LZO,
	DESIGNED_V		VARCHAR(100) ENCODE LZO,
	STRUCTURE		VARCHAR(100) ENCODE LZO,
	LENGTH_DSG		VARCHAR(100) ENCODE LZO,
	LENGTH_ANO		VARCHAR(100) ENCODE LZO,
	NUM_OF_CIR		FLOAT,
	CONDUCTOR_		VARCHAR(20) ENCODE LZO,
	COST_LAND		FLOAT,
	COST_OTHER		FLOAT,
	COST_TOTAL		FLOAT,
	EXPNS_OPER		FLOAT,
	EXPNS_MAIN		FLOAT,
	EXPNS_RENT		FLOAT,
	EXPNS_TOTA		FLOAT,
	DESIGNATI3		FLOAT,
	DESIGNATI4		FLOAT,
	VOLTAGE_O2		FLOAT,
	DESIGNED_2		FLOAT,
	STRUCTURE_		FLOAT,
	LENGTH_DS2		FLOAT,
	LENGTH_AN2		FLOAT,
	NUM_OF_CI2		FLOAT,
	CONDUCTOR2		FLOAT,
	COST_LAND_		FLOAT,
	COST_OTHE2		FLOAT,
	COST_TOTA2		FLOAT,
	EXPNS_OPE2		FLOAT,
	EXPNS_MAI2		FLOAT,
	EXPNS_REN2		FLOAT,
	EXPNS_TOT2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_75;
CREATE TABLE {schemaName}.{tableName}F1_75
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	LOSS_DSC		VARCHAR(40) ENCODE LZO,
	AMT_LOSS_T		FLOAT,
	RECOGNIZED		FLOAT,
	ACCT_WRTTN		VARCHAR(10) ENCODE LZO,
	AMT_WRTTN_		FLOAT,
	YR_END_BAL		FLOAT,
	LOSS_DSC_F		FLOAT,
	AMT_LOSS_2		FLOAT,
	RECOGNIZE2		FLOAT,
	ACCT_WRTT2		FLOAT,
	AMT_WRTTN2		FLOAT,
	YR_END_BA2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_76;
CREATE TABLE {schemaName}.{tableName}F1_76
(
	CODE			BIGINT,
	DESCRIPTIO		VARCHAR(80) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_77;
CREATE TABLE {schemaName}.{tableName}F1_77
(
	SCHED_TABL		VARCHAR(100) ENCODE LZO,
	REPORT_YEA		VARCHAR(100) ENCODE LZO,
	SCHED_LITE		VARCHAR(100) ENCODE LZO,
	SCHED_STAT		VARCHAR(100) ENCODE LZO,
	SCHED_CHG_		VARCHAR(100) ENCODE LZO,
	TURNED_SCH		VARCHAR(100) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_78;
CREATE TABLE {schemaName}.{tableName}F1_78
(
	SERIAL_NUM		VARCHAR(100) ENCODE LZO,
	EVENT_DATE		VARCHAR(100) ENCODE LZO,
	PROGRAM_ID		VARCHAR(100) ENCODE LZO,
	EVENT_CODE		VARCHAR(100) ENCODE LZO,
	RESPONDENT		VARCHAR(100) ENCODE LZO,
	REPORT_YEA		VARCHAR(100) ENCODE LZO,
	USER_ID			VARCHAR(100) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_79;
CREATE TABLE {schemaName}.{tableName}F1_79
(
	SCHED_TABL		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		VARCHAR(10) ENCODE LZO,
	COLUMN_NAM		VARCHAR(10) ENCODE LZO,
	COL_LITERA		VARCHAR(10) ENCODE LZO,
	COL_STATUS		VARCHAR(10) ENCODE LZO,
	COL_CHG_YR		VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_8;
CREATE TABLE {schemaName}.{tableName}F1_8
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	ACCT_DSC		VARCHAR(100) ENCODE LZO,
	BGN_YR_BAL		FLOAT,
	CHG_YR_DR_		FLOAT,
	CHG_YR_CR_		FLOAT,
	CHG_YR_DR2		FLOAT,
	CHG_YR_CR2		FLOAT,
	DR_ADJ_ACC		VARCHAR(100) ENCODE LZO,
	DR_ADJ_AMT		FLOAT,
	CR_ADJ_ACC		VARCHAR(100) ENCODE LZO,
	CR_ADJ_AMT		FLOAT,
	END_YR_BAL		FLOAT,
	ACCT_DSC_F		FLOAT,
	BGN_YR_BA2		FLOAT,
	CHG_YR_DR3		FLOAT,
	CHG_YR_CR3		FLOAT,
	CHG_YR_DR4		FLOAT,
	CHG_YR_CR4		FLOAT,
	DR_ADJ_AC2		FLOAT,
	DR_ADJ_AM2		FLOAT,
	CR_ADJ_AC2		FLOAT,
	CR_ADJ_AM2		FLOAT,
	END_YR_BA2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_80;
CREATE TABLE {schemaName}.{tableName}F1_80
(
	RESPONDENT		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		VARCHAR(10) ENCODE LZO,
	FILE_NAME		VARCHAR(100) ENCODE LZO,
	FILE_TYPE		VARCHAR(100) ENCODE LZO,
	DB_TABLE_N		VARCHAR(100) ENCODE LZO,
	COLUMN_NAM		VARCHAR(100) ENCODE LZO,
	SPPLMNT_NU		VARCHAR(100) ENCODE LZO,
	ROW_NUMBER1		VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_81;
CREATE TABLE {schemaName}.{tableName}F1_81
(
	RESPONDENT		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		VARCHAR(10) ENCODE LZO,
	SCHED_TABL		VARCHAR(10) ENCODE LZO,
	ROW_SEQ			VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_82;
CREATE TABLE {schemaName}.{tableName}F1_82
(
	SERIAL_NUM		VARCHAR(100) ENCODE LZO,
	DATE_TIME		VARCHAR(100) ENCODE LZO,
	PROGRAM_ID		VARCHAR(100) ENCODE LZO,
	CURR_FUNCT		VARCHAR(100) ENCODE LZO,
	SQL_CODE		VARCHAR(100) ENCODE LZO,
	RESPONDENT		VARCHAR(100) ENCODE LZO,
	REPORT_YEA		VARCHAR(100) ENCODE LZO,
	USERID			VARCHAR(100) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_83;
CREATE TABLE {schemaName}.{tableName}F1_83
(
	UNIQUE_NUM		BIGINT,
	RESPDNT_LA		BIGINT,
	FN_LAST_NU		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_84;
CREATE TABLE {schemaName}.{tableName}F1_84
(
	SCHED_TABL		VARCHAR(20) ENCODE LZO,
	REPORT_YEA		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_LITERA		VARCHAR(80) ENCODE LZO,
	ROW_STATUS		VARCHAR(10) ENCODE LZO,
	ROW_CHG_YR		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_85;
CREATE TABLE {schemaName}.{tableName}F1_85
(
	RESPONDENT		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		VARCHAR(10) ENCODE LZO,
	SPPLMNT_NU		VARCHAR(100) ENCODE LZO,
	ROW_NUMBER1		VARCHAR(100) ENCODE LZO,
	ROW_SEQ			VARCHAR(100) ENCODE LZO,
	ROW_PRVLG		VARCHAR(100) ENCODE LZO,
	PAGE_NUMBE		VARCHAR(100) ENCODE LZO,
	ITEM_NUMBE		VARCHAR(100) ENCODE LZO,
	COLUMN_NUM		VARCHAR(100) ENCODE LZO,
	COMMENTS		VARCHAR(100) ENCODE LZO,
	PAGE_NUMB2		VARCHAR(100) ENCODE LZO,
	ITEM_NUMB2		VARCHAR(100) ENCODE LZO,
	COLUMN_NU2		VARCHAR(100) ENCODE LZO,
	COMMENTS_F		VARCHAR(100) ENCODE LZO,
	REPORT_PRD		VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_86;
CREATE TABLE {schemaName}.{tableName}F1_86
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	PROJECT_NO		BIGINT,
	PLANT_NAME		VARCHAR(20) ENCODE LZO,
	PLANT_KIND		VARCHAR(30) ENCODE LZO,
	PLANT_CONS		VARCHAR(30) ENCODE LZO,
	YR_CONST		VARCHAR(100) ENCODE LZO,
	YR_INSTALL		VARCHAR(100) ENCODE LZO,
	TOT_CAPACI		VARCHAR(100) ENCODE LZO,
	PEAK_DEMAN		FLOAT,
	PLANT_HOUR		FLOAT,
	FAVORABLE_		FLOAT,
	ADVERSE_CO		FLOAT,
	AVG_NUM_OF		FLOAT,
	NET_GENERA		FLOAT,
	COST_OF_LA		FLOAT,
	COST_STRUC		FLOAT,
	COST_FACIL		FLOAT,
	COST_EQUIP		FLOAT,
	COST_ROADS		FLOAT,
	COST_PLANT		FLOAT,
	COST_PER_K		VARCHAR(100) ENCODE LZO,
	EXPNS_OPER		FLOAT,
	EXPNS_WATE		FLOAT,
	EXPNS_HYDR		FLOAT,
	EXPNS_ELEC		FLOAT,
	EXPNS_GENE		FLOAT,
	EXPNS_RENT		FLOAT,
	EXPNS_ENGN		FLOAT,
	EXPNS_STRU		FLOAT,
	EXPNS_DAMS		FLOAT,
	EXPNS_PLAN		FLOAT,
	EXPNS_MISC		FLOAT,
	EXPNS_TOTA		FLOAT,
	EXPNS_KWH		VARCHAR(100) ENCODE LZO,
	PROJECT_N2		FLOAT,
	PLANT_NAM2		FLOAT,
	PLANT_KIN2		FLOAT,
	PLANT_CON2		FLOAT,
	YR_CONST_F		FLOAT,
	YR_INSTAL2		FLOAT,
	TOT_CAPAC2		FLOAT,
	PEAK_DEMA2		FLOAT,
	PLANT_HOU2		FLOAT,
	FAVORABLE2		FLOAT,
	ADVERSE_C2		FLOAT,
	AVG_NUM_O2		FLOAT,
	NET_GENER2		FLOAT,
	COST_OF_L2		FLOAT,
	COST_STRU2		FLOAT,
	COST_FACI2		FLOAT,
	COST_EQUI2		FLOAT,
	COST_ROAD2		FLOAT,
	COST_PLAN2		FLOAT,
	COST_PER_2		FLOAT,
	EXPNS_OPE2		FLOAT,
	EXPNS_WAT2		FLOAT,
	EXPNS_HYD2		FLOAT,
	EXPNS_ELE2		FLOAT,
	EXPNS_GEN2		FLOAT,
	EXPNS_REN2		FLOAT,
	EXPNS_ENG2		FLOAT,
	EXPNS_STR2		FLOAT,
	EXPNS_DAM2		FLOAT,
	EXPNS_PLA2		FLOAT,
	EXPNS_MIS2		FLOAT,
	EXPNS_TOT2		FLOAT,
	EXPNS_KWH_		FLOAT,
	ASSET_RETI		FLOAT,
	ASSET_RET2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_87;
CREATE TABLE {schemaName}.{tableName}F1_87
(
	FN_ID			VARCHAR(10) ENCODE LZO,
	RESPONDENT		VARCHAR(10) ENCODE LZO,
	REPORT_YEA		VARCHAR(10) ENCODE LZO,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	PAGE_NUMBE		VARCHAR(10) ENCODE LZO,
	SPPLMNT_NU		VARCHAR(10) ENCODE LZO,
	ITEM_NUMBE		VARCHAR(10) ENCODE LZO,
	COLUMN_NUM		VARCHAR(10) ENCODE LZO,
	FN_POINTER		VARCHAR(10) ENCODE LZO,
	REPORT_PRD		VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_88;
CREATE TABLE {schemaName}.{tableName}F1_88
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	RESPONDEN2		VARCHAR(60) ENCODE LZO,
	CHG_DT_PRE		VARCHAR(100) ENCODE LZO,
	ADDR_PRNCP		VARCHAR(80) ENCODE LZO,
	CNTC_NAME		VARCHAR(100) ENCODE LZO,
	CNTC_TTL		VARCHAR(30) ENCODE LZO,
	CNTC_ADDR		VARCHAR(80) ENCODE LZO,
	CNTC_PHONE		VARCHAR(100) ENCODE LZO,
	SUBMISSION		VARCHAR(10) ENCODE LZO,
	RPT_DATE		VARCHAR(20) ENCODE LZO,
	ATTESTATIO		VARCHAR(100) ENCODE LZO,
	ATTESTATI2		VARCHAR(100) ENCODE LZO,
	ATTESTATI3		VARCHAR(100) ENCODE LZO,
	RESPONDEN3		FLOAT,
	CHG_DT_PR2		FLOAT,
	ADDR_PRNC2		FLOAT,
	CNTC_NAME_		FLOAT,
	CNTC_TTL_F		FLOAT,
	CNTC_ADDR_		FLOAT,
	CNTC_PHON2		FLOAT,
	SUBMISSIO2		FLOAT,
	RPT_DATE_F		FLOAT,
	ATTESTATI4		FLOAT,
	ATTESTATI5		FLOAT,
	ATTESTATI6		FLOAT,
	DATE_NAME_		VARCHAR(100) ENCODE LZO,
	DATE_NAME2		VARCHAR(100) ENCODE LZO,
	REPORT_PRD		BIGINT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_89;
CREATE TABLE {schemaName}.{tableName}F1_89
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	PLANT_NAME		VARCHAR(30) ENCODE LZO,
	PLANT_KIND		VARCHAR(30) ENCODE LZO,
	TYPE_CONST		VARCHAR(30) ENCODE LZO,
	YR_CONST		VARCHAR(100) ENCODE LZO,
	YR_INSTALL		VARCHAR(100) ENCODE LZO,
	TOT_CAPACI		VARCHAR(100) ENCODE LZO,
	PEAK_DEMAN		FLOAT,
	PLANT_HOUR		FLOAT,
	PLNT_CAPAB		FLOAT,
	WHEN_NOT_L		FLOAT,
	WHEN_LIMIT		FLOAT,
	AVG_NUM_OF		FLOAT,
	NET_GENERA		FLOAT,
	COST_LAND		FLOAT,
	COST_STRUC		FLOAT,
	COST_EQUIP		FLOAT,
	COST_OF_PL		FLOAT,
	COST_PER_K		VARCHAR(100) ENCODE LZO,
	EXPNS_OPER		FLOAT,
	EXPNS_FUEL		FLOAT,
	EXPNS_COOL		FLOAT,
	EXPNS_STEA		FLOAT,
	EXPNS_STE2		FLOAT,
	EXPNS_TRAN		FLOAT,
	EXPNS_ELEC		FLOAT,
	EXPNS_MISC		FLOAT,
	EXPNS_RENT		FLOAT,
	EXPNS_ALLO		FLOAT,
	EXPNS_ENGN		FLOAT,
	EXPNS_STRU		FLOAT,
	EXPNS_BOIL		FLOAT,
	EXPNS_PLAN		FLOAT,
	EXPNS_MIS2		FLOAT,
	TOT_PRDCTN		FLOAT,
	EXPNS_KWH		VARCHAR(100) ENCODE LZO,
	PLANT_NAM2		FLOAT,
	PLANT_KIN2		FLOAT,
	TYPE_CONS2		FLOAT,
	YR_CONST_F		FLOAT,
	YR_INSTAL2		FLOAT,
	TOT_CAPAC2		FLOAT,
	PEAK_DEMA2		FLOAT,
	PLANT_HOU2		FLOAT,
	PLNT_CAPA2		FLOAT,
	WHEN_NOT_2		FLOAT,
	WHEN_LIMI2		FLOAT,
	AVG_NUM_O2		FLOAT,
	NET_GENER2		FLOAT,
	COST_LAND_		FLOAT,
	COST_STRU2		FLOAT,
	COST_EQUI2		FLOAT,
	COST_OF_P2		FLOAT,
	COST_PER_2		FLOAT,
	EXPNS_OPE2		FLOAT,
	EXPNS_FUE2		FLOAT,
	EXPNS_COO2		FLOAT,
	EXPNS_STE3		FLOAT,
	EXPNS_STE4		FLOAT,
	EXPNS_TRA2		FLOAT,
	EXPNS_ELE2		FLOAT,
	EXPNS_MIS3		FLOAT,
	EXPNS_REN2		FLOAT,
	EXPNS_ALL2		FLOAT,
	EXPNS_ENG2		FLOAT,
	EXPNS_STR2		FLOAT,
	EXPNS_BOI2		FLOAT,
	EXPNS_PLA2		FLOAT,
	EXPNS_MIS4		FLOAT,
	TOT_PRDCT2		FLOAT,
	EXPNS_KWH_		FLOAT,
	ASSET_RETI		FLOAT,
	ASSET_RET2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_9;
CREATE TABLE {schemaName}.{tableName}F1_9
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	ACCT_DSC		VARCHAR(40) ENCODE LZO,
	BGN_YR_BAL		FLOAT,
	CHG_YR_DR_		FLOAT,
	CHG_YR_CR_		FLOAT,
	CHG_YR_DR2		FLOAT,
	CHG_YR_CR2		FLOAT,
	DR_ADJ_ACC		VARCHAR(20) ENCODE LZO,
	DR_ADJ_AMT		FLOAT,
	CR_ADJ_ACC		VARCHAR(20) ENCODE LZO,
	CR_ADJ_AMT		FLOAT,
	END_YR_BAL		FLOAT,
	ACCT_DSC_F		FLOAT,
	BGN_YR_BA2		FLOAT,
	CHG_YR_DR3		FLOAT,
	CHG_YR_CR3		FLOAT,
	CHG_YR_DR4		FLOAT,
	CHG_YR_CR4		FLOAT,
	DR_ADJ_AC2		FLOAT,
	DR_ADJ_AM2		FLOAT,
	CR_ADJ_AC2		FLOAT,
	CR_ADJ_AM2		FLOAT,
	END_YR_BA2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_90;
CREATE TABLE {schemaName}.{tableName}F1_90
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	LESSEE			VARCHAR(40) ENCODE LZO,
	DESCRIPTIO		VARCHAR(40) ENCODE LZO,
	COMMISSION		VARCHAR(20) ENCODE LZO,
	EXPIRATION		VARCHAR(20) ENCODE LZO,
	BALANCE			FLOAT,
	LESSEE_F		FLOAT,
	DESCRIPTI2		FLOAT,
	COMMISSIO2		FLOAT,
	EXPIRATIO2		FLOAT,
	BALANCE_F		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_91;
CREATE TABLE {schemaName}.{tableName}F1_91
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	INVSTMNT_D		VARCHAR(70) ENCODE LZO,
	ACQUIRED_D		VARCHAR(20) ENCODE LZO,
	MATURITY_D		VARCHAR(20) ENCODE LZO,
	BEGINYR_IN		FLOAT,
	SBSDRY_EQT		FLOAT,
	YEAR_REVEN		FLOAT,
	YR_END_INV		FLOAT,
	GAIN_OR_LO		FLOAT,
	INVSTMNT_2		FLOAT,
	ACQUIRED_2		FLOAT,
	MATURITY_2		FLOAT,
	BEGINYR_I2		FLOAT,
	SBSDRY_EQ2		FLOAT,
	YEAR_REVE2		FLOAT,
	YR_END_IN2		FLOAT,
	GAIN_OR_L2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_92;
CREATE TABLE {schemaName}.{tableName}F1_92
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DESCRIPTIO		VARCHAR(60) ENCODE LZO,
	DATE_ORIGI		VARCHAR(20) ENCODE LZO,
	DATE_EXPEC		VARCHAR(20) ENCODE LZO,
	BALANCE			FLOAT,
	DESCRIPTI2		FLOAT,
	DATE_ORIG2		FLOAT,
	DATE_EXPE2		FLOAT,
	BALANCE_F		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_93;
CREATE TABLE {schemaName}.{tableName}F1_93
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	CLS_SERS_O		VARCHAR(90) ENCODE LZO,
	PRNCPL_AMT		FLOAT,
	TOTAL_EXPE		FLOAT,
	PREMIUM_DS		VARCHAR(10) ENCODE LZO,
	NOMINAL_IS		VARCHAR(20) ENCODE LZO,
	MATURITY_D		VARCHAR(20) ENCODE LZO,
	AMRTZDPER_		VARCHAR(20) ENCODE LZO,
	AMRTZDPER2		VARCHAR(20) ENCODE LZO,
	OUTSTANDIN		FLOAT,
	YR_AMT_INT		FLOAT,
	CLS_SERS_2		FLOAT,
	PRNCPL_AM2		FLOAT,
	TOTAL_EXP2		FLOAT,
	PREMIUM_D2		FLOAT,
	NOMINAL_I2		FLOAT,
	MATURITY_2		FLOAT,
	AMRTZDPER3		FLOAT,
	AMRTZDPER4		FLOAT,
	OUTSTANDI2		FLOAT,
	YR_AMT_IN2		FLOAT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_ALLOWANCES_NOX;
CREATE TABLE {schemaName}.{tableName}F1_ALLOWANCES_NOX
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	SUCCEEDING		BIGINT,
	AI_BGNYRBA		VARCHAR(100) ENCODE LZO,
	AI_BGNYRB2		VARCHAR(100) ENCODE LZO,
	AI_ACQ_YR_		VARCHAR(100) ENCODE LZO,
	AI_ACQ_YR2		VARCHAR(100) ENCODE LZO,
	AI_EPA_RET		VARCHAR(100) ENCODE LZO,
	AI_EPA_RE2		VARCHAR(100) ENCODE LZO,
	PX_USERDEF		VARCHAR(100) ENCODE LZO,
	PX_USERDE2		VARCHAR(100) ENCODE LZO,
	PX_USERDE3		VARCHAR(100) ENCODE LZO,
	PX_USERDE4		VARCHAR(100) ENCODE LZO,
	PX_USERDE5		VARCHAR(100) ENCODE LZO,
	PX_USERDE6		VARCHAR(100) ENCODE LZO,
	PX_USERDE7		VARCHAR(100) ENCODE LZO,
	PX_USERDE8		VARCHAR(100) ENCODE LZO,
	PX_USERDE9		VARCHAR(100) ENCODE LZO,
	PX_USERD10		VARCHAR(100) ENCODE LZO,
	PX_USERD11		VARCHAR(100) ENCODE LZO,
	PX_USERD12		VARCHAR(100) ENCODE LZO,
	PX_USERD13		VARCHAR(100) ENCODE LZO,
	PX_USERD14		VARCHAR(100) ENCODE LZO,
	PX_USERD15		VARCHAR(100) ENCODE LZO,
	PX_USERD16		VARCHAR(100) ENCODE LZO,
	PX_USERD17		VARCHAR(100) ENCODE LZO,
	PX_USERD18		VARCHAR(100) ENCODE LZO,
	PX_USERD19		VARCHAR(100) ENCODE LZO,
	PX_USERD20		VARCHAR(100) ENCODE LZO,
	PX_USERD21		VARCHAR(100) ENCODE LZO,
	PX_TOTAL_N		VARCHAR(100) ENCODE LZO,
	PX_TOTAL_A		VARCHAR(100) ENCODE LZO,
	RDY_CHARGE		VARCHAR(100) ENCODE LZO,
	RDY_CHARG2		VARCHAR(100) ENCODE LZO,
	RDY_OTHER_		VARCHAR(100) ENCODE LZO,
	RDY_OTHER2		VARCHAR(100) ENCODE LZO,
	RDY_USERDE		VARCHAR(100) ENCODE LZO,
	RDY_USERD2		VARCHAR(100) ENCODE LZO,
	RDY_USERD3		VARCHAR(100) ENCODE LZO,
	SX_USERDEF		VARCHAR(100) ENCODE LZO,
	SX_USERDE2		VARCHAR(100) ENCODE LZO,
	SX_USERDE3		VARCHAR(100) ENCODE LZO,
	SX_USERDE4		VARCHAR(100) ENCODE LZO,
	SX_USERDE5		VARCHAR(100) ENCODE LZO,
	SX_USERDE6		VARCHAR(100) ENCODE LZO,
	SX_USERDE7		VARCHAR(100) ENCODE LZO,
	SX_USERDE8		VARCHAR(100) ENCODE LZO,
	SX_USERDE9		VARCHAR(100) ENCODE LZO,
	SX_USERD10		VARCHAR(100) ENCODE LZO,
	SX_USERD11		VARCHAR(100) ENCODE LZO,
	SX_USERD12		VARCHAR(100) ENCODE LZO,
	SX_USERD13		VARCHAR(100) ENCODE LZO,
	SX_USERD14		VARCHAR(100) ENCODE LZO,
	SX_USERD15		VARCHAR(100) ENCODE LZO,
	SX_USERD16		VARCHAR(100) ENCODE LZO,
	SX_USERD17		VARCHAR(100) ENCODE LZO,
	SX_USERD18		VARCHAR(100) ENCODE LZO,
	SX_TOTAL_N		VARCHAR(100) ENCODE LZO,
	SX_TOTAL_A		VARCHAR(100) ENCODE LZO,
	SX_YRENDBA		VARCHAR(100) ENCODE LZO,
	SX_YRENDB2		VARCHAR(100) ENCODE LZO,
	SX_NET_ASS		VARCHAR(100) ENCODE LZO,
	SX_NET_AS2		VARCHAR(100) ENCODE LZO,
	SX_NET_OTH		VARCHAR(100) ENCODE LZO,
	SX_NET_OT2		VARCHAR(100) ENCODE LZO,
	SX_GAINS_N		VARCHAR(100) ENCODE LZO,
	SX_GAINS_A		VARCHAR(100) ENCODE LZO,
	SX_LOSSES_		VARCHAR(100) ENCODE LZO,
	SX_LOSSES2		VARCHAR(100) ENCODE LZO,
	AW_BGNYRBA		VARCHAR(100) ENCODE LZO,
	AW_BGNYRB2		VARCHAR(100) ENCODE LZO,
	AW_WITHHEL		VARCHAR(100) ENCODE LZO,
	AW_WITHHE2		VARCHAR(100) ENCODE LZO,
	AW_RETURNE		VARCHAR(100) ENCODE LZO,
	AW_RETURN2		VARCHAR(100) ENCODE LZO,
	AW_SALES_N		VARCHAR(100) ENCODE LZO,
	AW_SALES_A		VARCHAR(100) ENCODE LZO,
	AW_YRENDBA		VARCHAR(100) ENCODE LZO,
	AW_YRENDB2		VARCHAR(100) ENCODE LZO,
	AW_NET_ASS		VARCHAR(100) ENCODE LZO,
	AW_NET_AS2		VARCHAR(100) ENCODE LZO,
	AW_NET_OTH		VARCHAR(100) ENCODE LZO,
	AW_NET_OT2		VARCHAR(100) ENCODE LZO,
	AW_GAINS_N		VARCHAR(100) ENCODE LZO,
	AW_GAINS_A		VARCHAR(100) ENCODE LZO,
	AW_LOSSES_		VARCHAR(100) ENCODE LZO,
	AW_LOSSES2		VARCHAR(100) ENCODE LZO,
	SUCCEEDIN2		BIGINT,
	AI_BGNYRB3		BIGINT,
	AI_BGNYRB4		BIGINT,
	AI_ACQ_YR3		BIGINT,
	AI_ACQ_YR4		BIGINT,
	AI_EPA_RE3		BIGINT,
	AI_EPA_RE4		BIGINT,
	PX_USERD22		BIGINT,
	PX_USERD23		BIGINT,
	PX_USERD24		BIGINT,
	PX_USERD25		BIGINT,
	PX_USERD26		BIGINT,
	PX_USERD27		BIGINT,
	PX_USERD28		BIGINT,
	PX_USERD29		BIGINT,
	PX_USERD30		BIGINT,
	PX_USERD31		BIGINT,
	PX_USERD32		BIGINT,
	PX_USERD33		BIGINT,
	PX_USERD34		BIGINT,
	PX_USERD35		BIGINT,
	PX_USERD36		BIGINT,
	PX_USERD37		BIGINT,
	PX_USERD38		BIGINT,
	PX_USERD39		BIGINT,
	PX_USERD40		BIGINT,
	PX_USERD41		BIGINT,
	PX_USERD42		BIGINT,
	PX_TOTAL_2		BIGINT,
	PX_TOTAL_3		BIGINT,
	RDY_CHARG3		BIGINT,
	RDY_CHARG4		BIGINT,
	RDY_OTHER3		BIGINT,
	RDY_OTHER4		BIGINT,
	RDY_USERD4		BIGINT,
	RDY_USERD5		BIGINT,
	RDY_USERD6		BIGINT,
	SX_USERD19		BIGINT,
	SX_USERD20		BIGINT,
	SX_USERD21		BIGINT,
	SX_USERD22		BIGINT,
	SX_USERD23		BIGINT,
	SX_USERD24		BIGINT,
	SX_USERD25		BIGINT,
	SX_USERD26		BIGINT,
	SX_USERD27		BIGINT,
	SX_USERD28		BIGINT,
	SX_USERD29		BIGINT,
	SX_USERD30		BIGINT,
	SX_USERD31		BIGINT,
	SX_USERD32		BIGINT,
	SX_USERD33		BIGINT,
	SX_USERD34		BIGINT,
	SX_USERD35		BIGINT,
	SX_USERD36		BIGINT,
	SX_TOTAL_2		BIGINT,
	SX_TOTAL_3		BIGINT,
	SX_YRENDB3		BIGINT,
	SX_YRENDB4		BIGINT,
	SX_NET_AS3		BIGINT,
	SX_NET_AS4		BIGINT,
	SX_NET_OT3		BIGINT,
	SX_NET_OT4		BIGINT,
	SX_GAINS_2		BIGINT,
	SX_GAINS_3		BIGINT,
	SX_LOSSES3		BIGINT,
	SX_LOSSES4		BIGINT,
	AW_BGNYRB3		BIGINT,
	AW_BGNYRB4		BIGINT,
	AW_WITHHE3		BIGINT,
	AW_WITHHE4		BIGINT,
	AW_RETURN3		BIGINT,
	AW_RETURN4		BIGINT,
	AW_SALES_2		BIGINT,
	AW_SALES_3		BIGINT,
	AW_YRENDB3		BIGINT,
	AW_YRENDB4		BIGINT,
	AW_NET_AS3		BIGINT,
	AW_NET_AS4		BIGINT,
	AW_NET_OT3		BIGINT,
	AW_NET_OT4		BIGINT,
	AW_GAINS_2		BIGINT,
	AW_GAINS_3		BIGINT,
	AW_LOSSES3		BIGINT,
	AW_LOSSES4		BIGINT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_CMPINC_HEDGE;
CREATE TABLE {schemaName}.{tableName}F1_CMPINC_HEDGE
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	UNREAL_GL_		VARCHAR(100) ENCODE LZO,
	MIN_PEN_LI		VARCHAR(100) ENCODE LZO,
	FOREIGN_CU		VARCHAR(100) ENCODE LZO,
	OTHER_ADJ		VARCHAR(100) ENCODE LZO,
	OTHER_CASH		VARCHAR(100) ENCODE LZO,
	OTHER_CAS2		VARCHAR(100) ENCODE LZO,
	TOT_CAT_21		VARCHAR(100) ENCODE LZO,
	NET_INC_11		VARCHAR(100) ENCODE LZO,
	TOT_COMP_I		VARCHAR(100) ENCODE LZO,
	UNREAL_GL2		BIGINT,
	MIN_PEN_L2		BIGINT,
	FOREIGN_C2		BIGINT,
	OTHER_ADJ_		BIGINT,
	OTHER_CAS3		BIGINT,
	OTHER_CAS4		BIGINT,
	TOT_CAT_22		BIGINT,
	NET_INC_12		BIGINT,
	TOT_COMP_2		BIGINT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_CMPINC_HEDGE_A;
CREATE TABLE {schemaName}.{tableName}F1_CMPINC_HEDGE_A
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	HEDGE1_CAT		VARCHAR(100) ENCODE LZO,
	HEDGE2_CAT		VARCHAR(100) ENCODE LZO,
	HEDGE1_CA2		BIGINT,
	HEDGE2_CA2		BIGINT,
	REPORT_PRD		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_EMAIL;
CREATE TABLE {schemaName}.{tableName}F1_EMAIL
(
	RESPONDENT		BIGINT,
	LASTNAME		VARCHAR(20) ENCODE LZO,
	FIRSTNAME		VARCHAR(30) ENCODE LZO,
	EMAIL			VARCHAR(100) ENCODE LZO,
	POC				BOOL,
	NOTIFY			VARCHAR(10) ENCODE LZO,
	PHONE_NUM		VARCHAR(20) ENCODE LZO,
	NOTES			VARCHAR(230) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_RG_TRN_SRV_REV;
CREATE TABLE {schemaName}.{tableName}F1_RG_TRN_SRV_REV
(
	RESPONDENT		BIGINT,
	REPORT_YEA		BIGINT,
	REPORT_PRD		BIGINT,
	SPPLMNT_NU		BIGINT,
	ROW_NUMBER1		BIGINT,
	ROW_SEQ			BIGINT,
	ROW_PRVLG		VARCHAR(10) ENCODE LZO,
	DESC_SERV		VARCHAR(50) ENCODE LZO,
	BAL_END_Q1		VARCHAR(100) ENCODE LZO,
	BAL_END_Q2		VARCHAR(100) ENCODE LZO,
	BAL_END_Q3		VARCHAR(100) ENCODE LZO,
	BAL_END_Q4		VARCHAR(100) ENCODE LZO,
	DESC_SERV_		BIGINT,
	BAL_END_Q5		BIGINT,
	BAL_END_Q6		BIGINT,
	BAL_END_Q7		BIGINT,
	BAL_END_Q8		INT
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_S0_CHECKS;
CREATE TABLE {schemaName}.{tableName}F1_S0_CHECKS
(
	REPORT_YR		BIGINT,
	REPORT_PRD		BIGINT,
	CHECK_ID		BIGINT,
	OTHER_ID		VARCHAR(10) ENCODE LZO,
	CHECK_GROU		VARCHAR(10) ENCODE LZO,
	CHECK_DESC		VARCHAR(110) ENCODE LZO,
	EQUATION1		VARCHAR(1170) ENCODE LZO,
	EQUATION2		VARCHAR(10) ENCODE LZO,
	VARIANCE_A		VARCHAR(100) ENCODE LZO,
	VARIANCE_P		VARCHAR(100) ENCODE LZO,
	ERROR_CHEC		VARCHAR(10) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_S0_FILING_LOG;
CREATE TABLE {schemaName}.{tableName}F1_S0_FILING_LOG
(
	RESPONDENT		BIGINT,
	REPORT_YR		BIGINT,
	REPORT_PRD		BIGINT,
	FILING_NUM		BIGINT,
	POC_EMAIL		VARCHAR(100) ENCODE LZO,
	SUBMITTED		VARCHAR(20) ENCODE LZO,
	RECEIVED		VARCHAR(20) ENCODE LZO,
	LOADED			VARCHAR(20) ENCODE LZO,
	MISC			VARCHAR(10) ENCODE LZO,
	FILING_NOT		VARCHAR(660) ENCODE LZO
);

DROP TABLE IF EXISTS {schemaName}.{tableName}F1_SECURITY;
CREATE TABLE {schemaName}.{tableName}F1_SECURITY
(
	RESPONDENT		BIGINT,
	PSWD_DOWNL		VARCHAR(10) ENCODE LZO
);

